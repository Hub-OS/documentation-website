"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7479],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,u=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(r),g=a,d=p["".concat(l,".").concat(g)]||p[g]||m[g]||u;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var u=r.length,i=new Array(u);i[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<u;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},5306:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>u,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const u={},i="TurnGauge",o={unversionedId:"client/lua-api/attack-api/turn-gauge",id:"client/lua-api/attack-api/turn-gauge",title:"TurnGauge",description:"TurnGauge.progress()",source:"@site/docs/01-client/02-lua-api/04-attack-api/07-turn-gauge.md",sourceDirName:"01-client/02-lua-api/04-attack-api",slug:"/client/lua-api/attack-api/turn-gauge",permalink:"/client/lua-api/attack-api/turn-gauge",draft:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/02-lua-api/04-attack-api/07-turn-gauge.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Status",permalink:"/client/lua-api/attack-api/status"},next:{title:"DefenseRule",permalink:"/client/lua-api/defense-api/defense-rule"}},l={},s=[{value:"<code>TurnGauge.progress()</code>",id:"turngaugeprogress",level:3},{value:"<code>TurnGauge.time()</code>",id:"turngaugetime",level:3},{value:"<code>TurnGauge.max_time()</code>",id:"turngaugemax_time",level:3},{value:"<code>TurnGauge.set_time(time)</code>",id:"turngaugeset_timetime",level:3},{value:"<code>TurnGauge.set_max_time(time)</code>",id:"turngaugeset_max_timetime",level:3},{value:"<code>TurnGauge.reset_max_time()</code>",id:"turngaugereset_max_time",level:3}],c={toc:s},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"turngauge"},"TurnGauge"),(0,a.kt)("h3",{id:"turngaugeprogress"},(0,a.kt)("inlineCode",{parentName:"h3"},"TurnGauge.progress()")),(0,a.kt)("p",null,"Returns the turn gauge's progress as a value between 0 and 1."),(0,a.kt)("p",null,"Same as ",(0,a.kt)("inlineCode",{parentName:"p"},"TurnGauge.time() / TurnGauge.max_time()")),(0,a.kt)("h3",{id:"turngaugetime"},(0,a.kt)("inlineCode",{parentName:"h3"},"TurnGauge.time()")),(0,a.kt)("p",null,"Returns the turn gauge's progress in elapsed frames."),(0,a.kt)("h3",{id:"turngaugemax_time"},(0,a.kt)("inlineCode",{parentName:"h3"},"TurnGauge.max_time()")),(0,a.kt)("p",null,"Returns the total elapsed frames required to end a turn."),(0,a.kt)("h3",{id:"turngaugeset_timetime"},(0,a.kt)("inlineCode",{parentName:"h3"},"TurnGauge.set_time(time)")),(0,a.kt)("p",null,"Sets the turn gauge's progress in elapsed frames."),(0,a.kt)("h3",{id:"turngaugeset_max_timetime"},(0,a.kt)("inlineCode",{parentName:"h3"},"TurnGauge.set_max_time(time)")),(0,a.kt)("p",null,"Sets the total elapsed frames required to end a turn."),(0,a.kt)("h3",{id:"turngaugereset_max_time"},(0,a.kt)("inlineCode",{parentName:"h3"},"TurnGauge.reset_max_time()")),(0,a.kt)("p",null,"Sets the total elapsed frames required to end a turn to the default (512)."))}m.isMDXComponent=!0}}]);