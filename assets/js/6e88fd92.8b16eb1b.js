"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5159],{7531:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>r});var t=a(4848),i=a(8453);const s={},o="Packages",l={id:"client/packages",title:"Packages",description:"Augments",source:"@site/docs/01-client/01-packages.md",sourceDirName:"01-client",slug:"/client/packages",permalink:"/client/packages",draft:!1,unlisted:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/01-packages.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"clientSidebar",next:{title:"Type Definitions",permalink:"/client/lua-api/type-definitions"}},c={},r=[{value:"Augments",id:"augments",level:2},{value:"Encounters",id:"encounters",level:2},{value:"Characters",id:"characters",level:2},{value:"Cards",id:"cards",level:2},{value:"Libraries and Packs",id:"libraries-and-packs",level:2},{value:"Statuses",id:"statuses",level:2},{value:"Tile States",id:"tile-states",level:2},{value:"Players",id:"players",level:2},{value:"Resources",id:"resources",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"packages",children:"Packages"}),"\n",(0,t.jsx)(n.h2,{id:"augments",children:"Augments"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "augment" # must match\nid = "dev.konstinople.augment.Attack1.bn6" # must be unique\npast_ids = [] # optional, list of strings\nname = "Attack+1"\ndescription = "MegaBstr\\nAttck +1"\nlong_description = "" # optional\npreview_texture_path = "preview.png" # optional\nhealth_boost = 0 # optional, default is 0\nattack_boost = 1 # optional, default is 0\nrapid_boost = 0 # optional, default is 0\ncharge_boost = 0 # optional, default is 0\nmega_boost = 0 # optional, default is 0\ngiga_boost = 0 # optional, default is 0\nhand_size_boost = 0 # optional, default is 0\n\n# optional, list of strings, custom\n# some tags will be automatically added: "BLOCK", "FLAT_BLOCK"\ntags = ["BUG"]\n\n## switch drive specific\n# valid slots: "Head" | "Arms" | "Body" | "Legs"\nslot = "Arms"\n\n## block specific\n# list of colors, case insensitive\n# valid colors: "red" | "green" | "blue" | "pink" | "yellow" | "white"\ncolors = ["pink", "red", "blue"]\nflat = false # optional, defaults to false\n# list of lists, 5x5, filled with 0 or 1s to represent the shape\nshape = [\n  [0, 0, 0, 0, 0],\n  [0, 0, 1, 0, 0],\n  [0, 0, 1, 0, 0],\n  [0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0]\n]\n# list of package ids\n# used when two augments of the same color touch on a grid\n# or when an augment on a grid is out of bounds\n# any package ids here must also be marked as a dependency\nbyproducts = []\nprevent_byproducts = false # optional, defaults to false, prevents all blocks from creating byproducts\n\n# this section is optional, see the Battle section for an example\n[defines]\ncharacters = []\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/entity-api/player#augment",children:"Augment"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"---@param augment Augment\nfunction augment_init(augment)\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"encounters",children:"Encounters"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "encounter" # must match\nid = "com.discord.Konstinople#7692.cactikil" # must be unique\npast_ids = [] # optional, list of strings\nname = "Cactikil"\ndescription = \'Cactikil, known as "Sabotekoron" in Japan, is a cactus\'\nlong_description = "" # optional\npreview_texture_path = "preview.png"\n\n## recording specific\nrecording_path = "recording.dat"\nrecording_overrides = []\n\n# this section is optional\n[defines]\ncharacters = [\n  { id = "com.discord.Konstinople#7692.enemy.cactikil", path = "cactikil" },\n  { id = "com.discord.Konstinople#7692.enemy.cactroll", path = "cactroll" },\n  { id = "com.discord.Konstinople#7692.enemy.cacter", path = "cacter" },\n]\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/field-api/encounter",children:"Encounter"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"---@param encounter Encounter\nfunction encounter_init(encounter)\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"characters",children:"Characters"}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/entity-api/character",children:"Character"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"---@param character Entity\nfunction character_init(character)\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"cards",children:"Cards"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "card" # must match\nid = "com.discord.Konstinople#7692.card.AreaEater" # must be unique\npast_ids = [] # optional, list of strings\nname = "AreaEatr"\nicon_texture_path = "icon.png" # 14x14\npreview_texture_path = "preview.png"\ndescription = "Beast steals panels!" # optional, used in preview\nlong_description = "Beast steals panels!" # optional, used in battle\ndamage = 100 # optional, defaults to 0\n# "none" | "fire" | "aqua" | "elec" | "wood" | "sword" |\n# "wind" | "cursor" | "summon" | "plus" | "break"\nelement = "sword" # optional, defaults to "none"\nsecondary_element = "none" # optional, defaults to "none"\ncodes = [\'A\', \'O\', \'X\']\ncard_class = "giga" # optional, "standard" | "mega"| "giga" | "dark" | "recipe"\nregular_allowed = false # optional, defaults to true for "standard" cards\nlimit = 3 # optional, defaults to 5\n# optional, case sensitive\n# for valid values, see: https://docs.hubos.dev/client/lua-api/attack-api/hit-props#hit_propsflags\nhit_flags = ["Impact", "Flinch", "Flash"]\n# optional, defaults to a duration matching level 1 for all statuses\nstatus_durations = [\n  { flag_name = "Flash", level = 1 },\n  # or\n  { flag_name = "Flash", duration = 300 }\n]\ncan_boost = true # optional, defaults to true\ncan_charge = true # optional, defaults to true\ntime_freeze = true # optional, defaults to false\nskip_time_freeze_intro = false # optional, defaults to false\nprevent_freeze_counter = false # optional, defaults to false\nconceal = false # optional, defaults to false\ntags = ["NAVI"] # optional, list of strings, custom\n# optional, used for PAs\nrecipes = [\n  { id = "BattleNetwork6.Class01.Standard.001", codes = ["A", "B", "C"] },\n  { name = "Cannon", codes = ["A", "B", "C"] },\n  { mix = [\n    { id = "BattleNetwork6.Class01.Standard.070" },\n    { name = "WideSwrd" },\n    { id = "BattleNetwork6.Class01.Standard.072" }\n  ] },\n]\n\n# this section is optional, see the Battle section for an example\n[defines]\ncharacters = []\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/attack-api/action",children:"Action"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- optional implementation, called when package ids change on cards tied to a character\n-- ---@param entity Entity\n-- ---@param card_index number\n-- function card_mutate(entity, card_index)\n-- end\n\n---@param entity Entity\n---@param card_properties CardProperties\nfunction card_init(entity, card_properties)\n  local action = Action.new(entity, "CHARACTER_IDLE")\n\n  -- note: returning nil instead of an Action will create a poof effect\n  return action\nend\n'})}),"\n",(0,t.jsx)(n.h2,{id:"libraries-and-packs",children:"Libraries and Packs"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "library" # accepts "library" and "pack"\nid = "com.example.library" # must be unique\npast_ids = [] # optional, list of strings\nname = "Example Library"\ndescription = "Example Library"\nlong_description = "" # optional\npreview_texture_path = "preview.png" # optional\n\n# this section is optional, see the Battle section for an example\n[defines]\ncharacters = []\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["May contain an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Can contain anything\n-- The return value will be passed to lua files using require(package_id)\nreturn "hello"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"statuses",children:"Statuses"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "status" # must match\nid = "com.BN6.Statuses.Bubble"\npast_ids = [] # optional, list of strings\nname = "Bubble Status"\ndescription = "" # optional\nlong_description = "" # optional\nicon_texture_path = "icon.png" # 12x12 optional\npreview_texture_path = "preview.png" # optional\nflag_name = "Bubble" # register Hit.Bubble, up to 64 hit flags can exist\nmutual_exclusions = ["Freeze"] # prevents conflicting statuses from applying, prioritizes the last applied status\nblocks_actions = true # prevents the player from using Actions and animating\nblocks_mobility = true # prevents the player from moving\ndurations = [90] # a list of durations for each supported level of the status\n\n# this section is optional, see the Battle section for an example\n[defines]\ncharacters = []\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/attack-api/status",children:"Status"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"---@param status Status\nfunction status_init(status)\n  -- apply\n  -- create components and sprites for graphics here\n  -- modify animation state, etc\n\n  status.on_delete_func = function(self)\n    -- clean up\n  end\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tile-states",children:"Tile States"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "tile_state" # must match\nid = "BattleNetwork6.TileStates.Grass"\npast_ids = [] # optional, list of strings\ncategory = "tile_state"\nname = "BN6 Grass Tile"\nstate_name = "Grass"\ntexture_path = "texture.png"\nanimation_path = "animation.animation"\nmax_lifetime = 60 # optional\nhide_frame = false # optional\nhide_body = false # optional\nhole = false # optional, affects tile:is_walkable()\ncleanser_element = "Fire" # optional, attacks matching this element will overwrite the state to TileState.Normal\n\n# this section is optional, see the Battle section for an example\n[defines]\ncharacters = []\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/field-api/custom-tile-state",children:"CustomTileState"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"---@param custom_tile_state CustomTileState\nfunction status_init(custom_tile_state)\n  custom_tile_state.on_entity_enter_func = function(self, entity, movement)\n    -- ...\n  end\nend\n"})}),"\n",(0,t.jsx)(n.p,{children:"Animation example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'# prefix state names with "RED_" "BLUE_" "OTHER_" to add support for team differences\n# suffix with "_FLIPPED" to support perspective differences\n# if there\'s a universal state, just use "DEFAULT"\n\nanimation state="1"\nframe x="0" w="40" h="30"\n\nanimation state="2"\nframe x="40" w="40" h="30"\n\nanimation state="3"\nframe x="80" w="40" h="30"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"players",children:"Players"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "player" # must match\nid = "com.discord.Konstinople#7692.player.Man" # must be unique\npast_ids = [] # optional, list of strings\nname = "Man"\ndescription = "Before he was Mega, he was Man"\nlong_description = "" # optional\nhealth = 1000\nicon_texture_path = "icon.png"\npreview_texture_path = "preview.png"\noverworld_animation_path = "overworld.animation"\noverworld_texture_path = "overworld.png"\nmugshot_texture_path = "mug.png"\nmugshot_animation_path = "mug.animation"\nemotions_texture_path = "" # optional\nemotions_animation_path = "" # optional\n\n# this section is optional, see the Battle section for an example\n[defines]\ncharacters = []\n\n# this section is optional\n[dependencies]\naugments = [] # optional, list of package ids\nencounters = [] # optional, list of package ids\ncards = [] # optional, list of package ids, must also depend on defining package\ncharacters = [] # optional, list of package ids\nlibraries = [] # optional, list of package ids\nstatuses = [] # optional, list of package ids\ntile_states = [] # optional, list of package ids\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects an ",(0,t.jsx)(n.code,{children:"entry.lua"})," file. See ",(0,t.jsx)(n.a,{href:"/client/lua-api/entity-api/player",children:"Player"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"---@param player Entity\nfunction player_init(player)\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"package.toml"})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[package]\ncategory = "resource" # must match\nid = "com.example.resource" # must be unique\npast_ids = [] # optional, list of strings\nname = "Example Resource Package"\ndescription = "Example Resource Package"\nlong_description = "" # optional\npreview_texture_path = "preview.png" # optional\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Expects a ",(0,t.jsx)(n.code,{children:"resources"})," folder. Files in this package's ",(0,t.jsx)(n.code,{children:"resources"})," folder will override files in the program's ",(0,t.jsx)(n.code,{children:"resources"})," folder when enabled."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>l});var t=a(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);