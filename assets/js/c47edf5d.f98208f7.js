"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2187],{9843:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=n(4848),s=n(8453);const l={},r="HitProps",d={id:"client/lua-api/attack-api/hit-props",title:"HitProps",description:"See spell:sethitprops()",source:"@site/docs/01-client/02-lua-api/04-attack-api/02-hit-props.md",sourceDirName:"01-client/02-lua-api/04-attack-api",slug:"/client/lua-api/attack-api/hit-props",permalink:"/client/lua-api/attack-api/hit-props",draft:!1,unlisted:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/02-lua-api/04-attack-api/02-hit-props.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Action",permalink:"/client/lua-api/attack-api/action"},next:{title:"Cards",permalink:"/client/lua-api/attack-api/cards"}},a={},c=[{value:"<code>HitProps.new(damage, flags, element, secondary_element, context?, drag?)</code>",id:"hitpropsnewdamage-flags-element-secondary_element-context-drag",level:3},{value:"<code>HitProps.new(damage, flags, element, context?, drag?)</code>",id:"hitpropsnewdamage-flags-element-context-drag",level:3},{value:"<code>HitProps.from_card(card_properties, context?, drag?)</code>",id:"hitpropsfrom_cardcard_properties-context-drag",level:3},{value:"<code>hit_props.damage</code>",id:"hit_propsdamage",level:3},{value:"<code>hit_props.flags</code>",id:"hit_propsflags",level:3},{value:"<code>hit_props.status_durations</code>",id:"hit_propsstatus_durations",level:3},{value:"<code>hit_props.element</code>",id:"hit_propselement",level:3},{value:"<code>hit_props.secondary_element</code>",id:"hit_propssecondary_element",level:3},{value:"<code>hit_props.drag</code>",id:"hit_propsdrag",level:3},{value:"<code>hit_props.context</code>",id:"hit_propscontext",level:3},{value:"Hit",id:"hit",level:2},{value:"<code>Hit.duration_for(hit_flag, level)</code>",id:"hitduration_forhit_flag-level",level:3},{value:"<code>Hit.mutual_exclusions_for(hit_flag)</code>",id:"hitmutual_exclusions_forhit_flag",level:3},{value:"Element",id:"element",level:2},{value:"<code>Element.is_weak_to(element_a, element_b)</code>",id:"elementis_weak_toelement_a-element_b",level:3},{value:"Drag",id:"drag",level:2},{value:"<code>Drag.new(direction?, distance?)</code>",id:"dragnewdirection-distance",level:3},{value:"<code>Drag.None</code>",id:"dragnone",level:3},{value:"<code>drag.direction</code>",id:"dragdirection",level:3},{value:"<code>drag.distance</code>",id:"dragdistance",level:3},{value:"AttackContext",id:"attackcontext",level:2},{value:"<code>context.aggressor</code>",id:"contextaggressor",level:3},{value:"<code>context.flags</code>",id:"contextflags",level:3},{value:"<code>context.status_durations</code>",id:"contextstatus_durations",level:3},{value:"<code>context.drag</code>",id:"contextdrag",level:3}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"hitprops",children:"HitProps"}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsxs)(t.a,{href:"/client/lua-api/entity-api/spell#spellset_hit_propshit_props",children:["spell",":set_hit_props","()"]})]}),"\n",(0,i.jsx)(t.h3,{id:"hitpropsnewdamage-flags-element-secondary_element-context-drag",children:(0,i.jsx)(t.code,{children:"HitProps.new(damage, flags, element, secondary_element, context?, drag?)"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"damage"}),": integer"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"flags"}),": See ",(0,i.jsx)(t.a,{href:"#hit_propsflags",children:"flags"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"element"}),": ",(0,i.jsx)(t.a,{href:"#element",children:"Element"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"secondary_element"}),": ",(0,i.jsx)(t.a,{href:"#element",children:"Element"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"context"}),": An ",(0,i.jsx)(t.a,{href:"#attackcontext",children:"AttackContext"})," (obtained by ",(0,i.jsxs)(t.a,{href:"/client/lua-api/entity-api/entity#entitycontext",children:["entity",":context","()"]}),")"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"drag"}),": ",(0,i.jsx)(t.a,{href:"#drag",children:"Drag"})," defaults to Drag.None"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Returns a new HitProps instance."}),"\n",(0,i.jsx)(t.h3,{id:"hitpropsnewdamage-flags-element-context-drag",children:(0,i.jsx)(t.code,{children:"HitProps.new(damage, flags, element, context?, drag?)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a new HitProps instance."}),"\n",(0,i.jsx)(t.h3,{id:"hitpropsfrom_cardcard_properties-context-drag",children:(0,i.jsx)(t.code,{children:"HitProps.from_card(card_properties, context?, drag?)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a new HitProps instance."}),"\n",(0,i.jsx)(t.h3,{id:"hit_propsdamage",children:(0,i.jsx)(t.code,{children:"hit_props.damage"})}),"\n",(0,i.jsx)(t.p,{children:"A number, used to calculate how much health to take away from entities hit by the attack."}),"\n",(0,i.jsx)(t.h3,{id:"hit_propsflags",children:(0,i.jsx)(t.code,{children:"hit_props.flags"})}),"\n",(0,i.jsxs)(t.p,{children:["Any of the values below, or combined using bitwise or (",(0,i.jsx)(t.code,{children:"|"}),")"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Hit.None"})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.RetainIntangible"})," prevents intangibility from being lost if the attack pierces."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.NoCounter"})," prevents the attack from countering."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Drag"})," Allows the ",(0,i.jsx)(t.a,{href:"#hit_propsdrag",children:"drag property"})," to drag the entity."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Impact"})," allows the attack to counter the entity and causes the entity to appear white for one frame."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Flinch"})," read by the hit entity to cancel attacks and play a flinch animation."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Flash"})," applies the default intangible rule to the hit entity and flickers the entity's sprite."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Shake"})," causes the hit entity to shake."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.PierceInvis"})," read by defense rules to pierce defenses."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.PierceGuard"})," read by defense rules to pierce defenses."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.PierceGround"})," read by defense rules to pierce defenses."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Freeze"})," applies freeze status on hit."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Paralyze"})," applies paralyze status on hit."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Root"})," applies root status on hit."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Blind"})," applies blindness status on hit."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Hit.Confuse"})," applies confusion status on hit."]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/client/packages#statuses",children:"Hit.[flag_name]"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"hit_propsstatus_durations",children:(0,i.jsx)(t.code,{children:"hit_props.status_durations"})}),"\n",(0,i.jsx)(t.p,{children:"A table that maps frame durations for status hit flags."}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"#hitduration_forhit_flag-level",children:"Hit.duration_for()"})]}),"\n",(0,i.jsx)(t.h3,{id:"hit_propselement",children:(0,i.jsx)(t.code,{children:"hit_props.element"})}),"\n",(0,i.jsxs)(t.p,{children:["An ",(0,i.jsx)(t.a,{href:"#element",children:"Element"}),". If element or secondary_element is super effective against an entity's element, this attack will deal 2x damage."]}),"\n",(0,i.jsx)(t.h3,{id:"hit_propssecondary_element",children:(0,i.jsx)(t.code,{children:"hit_props.secondary_element"})}),"\n",(0,i.jsxs)(t.p,{children:["An ",(0,i.jsx)(t.a,{href:"#element",children:"Element"}),". If element or secondary_element is super effective against an entity's element, this attack will deal 2x damage."]}),"\n",(0,i.jsx)(t.h3,{id:"hit_propsdrag",children:(0,i.jsx)(t.code,{children:"hit_props.drag"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#drag",children:"Drag"})}),"\n",(0,i.jsx)(t.h3,{id:"hit_propscontext",children:(0,i.jsx)(t.code,{children:"hit_props.context"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"#attackcontext",children:"AttackContext"})," obtained by ",(0,i.jsxs)(t.a,{href:"/client/lua-api/entity-api/entity#entitycontext",children:["entity",":context","()"]})]}),"\n",(0,i.jsx)(t.h2,{id:"hit",children:"Hit"}),"\n",(0,i.jsx)(t.h3,{id:"hitduration_forhit_flag-level",children:(0,i.jsx)(t.code,{children:"Hit.duration_for(hit_flag, level)"})}),"\n",(0,i.jsxs)(t.p,{children:["-",(0,i.jsx)(t.code,{children:"level"}),": Starts at level 1, clamps to valid (defined) duration levels.\nDurations are specified in ",(0,i.jsx)(t.a,{href:"/client/packages#statuses",children:"Status Packages"})]}),"\n",(0,i.jsxs)(t.p,{children:["Returns the duration in frames for a status effect at a specific level, or ",(0,i.jsx)(t.code,{children:"1"})," if no durations are specified."]}),"\n",(0,i.jsx)(t.h3,{id:"hitmutual_exclusions_forhit_flag",children:(0,i.jsx)(t.code,{children:"Hit.mutual_exclusions_for(hit_flag)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a number, representing all of the mutually exclusive hit flags for bit manipulation."}),"\n",(0,i.jsx)(t.h2,{id:"element",children:"Element"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.None"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Fire"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Aqua"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Elec"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Wood"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Sword"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Wind"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Cursor"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Summon"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Plus"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Element.Break"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"elementis_weak_toelement_a-element_b",children:(0,i.jsx)(t.code,{children:"Element.is_weak_to(element_a, element_b)"})}),"\n",(0,i.jsxs)(t.p,{children:["Returns true if ",(0,i.jsx)(t.code,{children:"element_a"})," is weak to ",(0,i.jsx)(t.code,{children:"element_b"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"drag",children:"Drag"}),"\n",(0,i.jsx)(t.h3,{id:"dragnewdirection-distance",children:(0,i.jsx)(t.code,{children:"Drag.new(direction?, distance?)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a new Drag instance."}),"\n",(0,i.jsx)(t.h3,{id:"dragnone",children:(0,i.jsx)(t.code,{children:"Drag.None"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a new Drag instance."}),"\n",(0,i.jsxs)(t.p,{children:["Same as ",(0,i.jsx)(t.code,{children:"Drag.new()"})]}),"\n",(0,i.jsx)(t.h3,{id:"dragdirection",children:(0,i.jsx)(t.code,{children:"drag.direction"})}),"\n",(0,i.jsx)(t.p,{children:"Direction, the direction to move the entity."}),"\n",(0,i.jsx)(t.h3,{id:"dragdistance",children:(0,i.jsx)(t.code,{children:"drag.distance"})}),"\n",(0,i.jsx)(t.p,{children:"Number, the amount of tiles to drag the entity."}),"\n",(0,i.jsx)(t.h2,{id:"attackcontext",children:"AttackContext"}),"\n",(0,i.jsxs)(t.p,{children:["Data tracking the attacker and ",(0,i.jsx)(t.a,{href:"/client/lua-api/attack-api/hit-props",children:"HitProps"})," overrides.\nObtained by ",(0,i.jsxs)(t.a,{href:"/client/lua-api/entity-api/entity#entitycontext",children:["entity",":context","()"]})," and passed through HitProps.\nUpdates when a player or character starts an attack, or when HitProps are set on an entity.\nBy default, the context is used by the engine to pass flags related to countering, see ",(0,i.jsxs)(t.a,{href:"/client/lua-api/entity-api/living#livingset_counterableenabled",children:["living",":set_counterable","()"]}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"contextaggressor",children:(0,i.jsx)(t.code,{children:"context.aggressor"})}),"\n",(0,i.jsx)(t.p,{children:"The EntityId of the attacking entity."}),"\n",(0,i.jsx)(t.h3,{id:"contextflags",children:(0,i.jsx)(t.code,{children:"context.flags"})}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"#hit_propsflags",children:"HitProps.flags"})]}),"\n",(0,i.jsx)(t.h3,{id:"contextstatus_durations",children:(0,i.jsx)(t.code,{children:"context.status_durations"})}),"\n",(0,i.jsx)(t.p,{children:"A table that maps frame durations for status hit flags."}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"#hitduration_forhit_flag-level",children:"Hit.duration_for()"})]}),"\n",(0,i.jsx)(t.h3,{id:"contextdrag",children:(0,i.jsx)(t.code,{children:"context.drag"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#drag",children:"Drag"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var i=n(6540);const s={},l=i.createContext(s);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);