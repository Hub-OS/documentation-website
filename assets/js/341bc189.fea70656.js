"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5950],{8327:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=t(4848),i=t(8453);const a={},s="Server Events",l={id:"server/lua-api/events",title:"Server Events",description:"Positions are in tile space. To get the center of a tile add 0.5",source:"@site/docs/02-server/04-lua-api/03-events.md",sourceDirName:"02-server/04-lua-api",slug:"/server/lua-api/events",permalink:"/server/lua-api/events",draft:!1,unlisted:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/02-server/04-lua-api/03-events.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"serverSidebar",previous:{title:"Event Emitters",permalink:"/server/lua-api/event-emitters"},next:{title:"Areas",permalink:"/server/lua-api/areas"}},o={},d=[{value:"<code>tick</code>",id:"tick",level:3},{value:"<code>player_request</code>",id:"player_request",level:3},{value:"<code>player_connect</code>",id:"player_connect",level:3},{value:"<code>player_join</code>",id:"player_join",level:3},{value:"<code>player_area_transfer</code>",id:"player_area_transfer",level:3},{value:"<code>player_disconnect</code>",id:"player_disconnect",level:3},{value:"<code>player_move</code>",id:"player_move",level:3},{value:"<code>player_augment</code>",id:"player_augment",level:3},{value:"<code>player_avatar_change</code>",id:"player_avatar_change",level:3},{value:"<code>player_emote</code>",id:"player_emote",level:3},{value:"<code>custom_warp</code>",id:"custom_warp",level:3},{value:"<code>object_interaction</code>",id:"object_interaction",level:3},{value:"<code>actor_interaction</code>",id:"actor_interaction",level:3},{value:"<code>tile_interaction</code>",id:"tile_interaction",level:3},{value:"<code>textbox_response</code>",id:"textbox_response",level:3},{value:"<code>board_open</code>",id:"board_open",level:3},{value:"<code>board_close</code>",id:"board_close",level:3},{value:"<code>post_request</code>",id:"post_request",level:3},{value:"<code>post_selection</code>",id:"post_selection",level:3},{value:"<code>shop_leave</code>",id:"shop_leave",level:3},{value:"<code>shop_close</code>",id:"shop_close",level:3},{value:"<code>shop_purchase</code>",id:"shop_purchase",level:3},{value:"<code>shop_description_request</code>",id:"shop_description_request",level:3},{value:"<code>item_use</code>",id:"item_use",level:3},{value:"<code>battle_results</code>",id:"battle_results",level:3},{value:"<code>server_message</code>",id:"server_message",level:3},{value:"<code>authorization</code>",id:"authorization",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"server-events",children:"Server Events"}),"\n",(0,r.jsxs)(n.p,{children:["Positions are in tile space. To get the center of a tile add ",(0,r.jsx)(n.code,{children:"0.5"})]}),"\n",(0,r.jsx)(n.h3,{id:"tick",children:(0,r.jsx)(n.code,{children:"tick"})}),"\n",(0,r.jsx)(n.p,{children:"Emits 20 times per second."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("tick", function(event)\n  -- { delta_time: number (seconds) }\n  print(event.delta_time)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_request",children:(0,r.jsx)(n.code,{children:"player_request"})}),"\n",(0,r.jsx)(n.p,{children:"Emits when the player requests connection to the server. It is the first event seen by scripts for a player's connection."}),"\n",(0,r.jsx)(n.p,{children:"Only transfers and kicks should occur in listeners for this event."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_request", function(event)\n  -- { player_id: Net.ActorId, data: string }\n  print(event.player_id, event.data)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_connect",children:(0,r.jsx)(n.code,{children:"player_connect"})}),"\n",(0,r.jsx)(n.p,{children:"Emits when the player connects to the server (good place to setup while the player is loading)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_connect", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_join",children:(0,r.jsx)(n.code,{children:"player_join"})}),"\n",(0,r.jsx)(n.p,{children:"Emits when the player enters their first area after connecting."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_join", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_area_transfer",children:(0,r.jsx)(n.code,{children:"player_area_transfer"})}),"\n",(0,r.jsx)(n.p,{children:"Emits when the player changes area."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_area_transfer", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_disconnect",children:(0,r.jsx)(n.code,{children:"player_disconnect"})}),"\n",(0,r.jsx)(n.p,{children:"The player is invalid after this function executes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_disconnect", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_move",children:(0,r.jsx)(n.code,{children:"player_move"})}),"\n",(0,r.jsxs)(n.p,{children:["Calling ",(0,r.jsx)(n.code,{children:"Net.get_player_position(event.player_id)"})," within the listener will report the player's old position, as the player's position is updated after the event is emitted."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_move", function(event)\n  -- { player_id: Net.ActorId, x: number, y: number, z: number }\n  print(event.player_id, event.x, event.y, event.z)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_augment",children:(0,r.jsx)(n.code,{children:"player_augment"})}),"\n",(0,r.jsx)(n.p,{children:"The player's base health and max health will be updated on the player before this event emits."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_augment", function(event)\n  -- { player_id: Net.ActorId, augments: { id: string }[] }\n  print(event.player_id, event)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_avatar_change",children:(0,r.jsx)(n.code,{children:"player_avatar_change"})}),"\n",(0,r.jsxs)(n.p,{children:["The player's health, base health, max health, and element will be updated on the player before this function executes.\n",(0,r.jsx)(n.code,{children:"prevent_default"})," blocks texture and animation change from being visible to other clients."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_avatar_change", function(event)\n  -- { player_id: Net.ActorId, texture_path: string, animation_path: string, prevent_default: Function }\n  print(event.player_id, event)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"player_emote",children:(0,r.jsx)(n.code,{children:"player_emote"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("player_emote", function(event)\n  -- { player_id: Net.ActorId, emote: number, prevent_default: Function }\n  print(event.player_id, event.emote)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"custom_warp",children:(0,r.jsx)(n.code,{children:"custom_warp"})}),"\n",(0,r.jsx)(n.p,{children:'Player warped out by a "Custom Warp" or "Custom Server Warp".'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("custom_warp", function(event)\n  -- { player_id: Net.ActorId, object_id: number }\n  print(event.player_id, event.object_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"object_interaction",children:(0,r.jsx)(n.code,{children:"object_interaction"})}),"\n",(0,r.jsx)(n.p,{children:"The player has pressed the Interact button on an Object."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("object_interaction", function(event)\n  -- { player_id: Net.ActorId, object_id: number, button: number }\n  print(event.player_id, event.object_id, event.button)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"actor_interaction",children:(0,r.jsx)(n.code,{children:"actor_interaction"})}),"\n",(0,r.jsx)(n.p,{children:"The player has pressed the Interact button on another Player or Bot."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("actor_interaction", function(event)\n  -- { player_id: Net.ActorId, actor_id: string, button: number }\n  -- actor_id is a player or bot id\n  print(event.player_id, event.actor_id, event.button)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tile_interaction",children:(0,r.jsx)(n.code,{children:"tile_interaction"})}),"\n",(0,r.jsx)(n.p,{children:"The player has pressed the Interact button with no Actor or Object in range."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("tile_interaction", function(event)\n  -- { player_id: Net.ActorId, x: number, y: number, z: number, button: number }\n  print(event.player_id, event.x, event.y, event.z, event.button)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"textbox_response",children:(0,r.jsx)(n.code,{children:"textbox_response"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("textbox_response", function(event)\n  -- { player_id: Net.ActorId, response: number | string }\n  print(event.player_id, event.response)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"board_open",children:(0,r.jsx)(n.code,{children:"board_open"})}),"\n",(0,r.jsx)(n.p,{children:"Deprecated."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("board_open", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"board_close",children:(0,r.jsx)(n.code,{children:"board_close"})}),"\n",(0,r.jsx)(n.p,{children:"The board menu has closed from either another menu opening or the player pressing the Cancel button."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("board_close", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"post_request",children:(0,r.jsx)(n.code,{children:"post_request"})}),"\n",(0,r.jsx)(n.p,{children:"Client has exhausted board posts and is requesting more posts. Useful for implementing infinite scroll."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("post_request", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"post_selection",children:(0,r.jsx)(n.code,{children:"post_selection"})}),"\n",(0,r.jsx)(n.p,{children:"The player has pressed the Confirm button on a board post. A custom response using textboxes is expected, but optional."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("post_selection", function(event)\n  -- { player_id: Net.ActorId, post_id: string }\n  print(event.player_id, event.post_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"shop_leave",children:(0,r.jsx)(n.code,{children:"shop_leave"})}),"\n",(0,r.jsxs)(n.p,{children:["The player has pressed the Cancel button in the shop menu. A custom message using ",(0,r.jsx)(n.a,{href:"/server/lua-api/widgets#netset_shop_messageplayer_id-message",children:"Net.set_shop_message()"})," is expected, but optional."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("shop_leave", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"shop_close",children:(0,r.jsx)(n.code,{children:"shop_close"})}),"\n",(0,r.jsx)(n.p,{children:"The shop menu has closed from either another menu opening or completing leave."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("shop_close", function(event)\n  -- { player_id: Net.ActorId }\n  print(event.player_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"shop_purchase",children:(0,r.jsx)(n.code,{children:"shop_purchase"})}),"\n",(0,r.jsx)(n.p,{children:"The player has pressed the Confirm button on a shop item. A custom response using textboxes is expected, but optional."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("shop_purchase", function(event)\n  -- { player_id: Net.ActorId, item_id: string }\n  print(event.player_id, event.item_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"shop_description_request",children:(0,r.jsx)(n.code,{children:"shop_description_request"})}),"\n",(0,r.jsx)(n.p,{children:"The player has pressed the Info button on a shop item."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("shop_description_request", function(event)\n  -- { player_id: Net.ActorId, item_id: string }\n  print(event.player_id, event.item_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"item_use",children:(0,r.jsx)(n.code,{children:"item_use"})}),"\n",(0,r.jsx)(n.p,{children:"Emits when the player requests to use an item. Does not automatically remove the item from their inventory."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("item_use", function(event)\n  -- { player_id: Net.ActorId, item_id: string }\n  print(event.player_id, event.item_id)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"battle_results",children:(0,r.jsx)(n.code,{children:"battle_results"})}),"\n",(0,r.jsx)(n.p,{children:"Emits after a player leaves any server sent battle, regardless of winning, losing, or running."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("battle_results", function(event)\n  --[[\n    {\n      player_id: Net.ActorId,\n      won: boolean,\n      health: number,\n      score: number,\n      time: number,\n      ran: bool,\n      emotion: string,\n      turns: number,\n      allies: { name: String, health: number }[],\n      enemies: { name: String, health: number }[],\n      neutral: { name: String, health: number }[],\n    }\n  ]]--\n  print(event.player_id, event.health, event.time, event.ran, event.emotion, event.turns, event.enemies)\nend)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"server_message",children:(0,r.jsx)(n.code,{children:"server_message"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("server_message", function(event)\n  -- { address: string, data: string }\n  print(event.address, event.data)\nen\n'})}),"\n",(0,r.jsx)(n.h3,{id:"authorization",children:(0,r.jsx)(n.code,{children:"authorization"})}),"\n",(0,r.jsxs)(n.p,{children:["A player on another server needs to be authenticated with this server, caused by a server calling ",(0,r.jsx)(n.a,{href:"/server/lua-api/players#netrequest_authorizationplayer_id-address-data",children:"Net.request_authorization()"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The host for the other server is provided with the event for custom response / implementation."}),"\n",(0,r.jsx)(n.p,{children:"Do NOT share identity with other servers, use data for a temporary link between identities without sharing the identity."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'Net:on("authorization", function(event)\n  -- { identity: string, host: string, data: string }\n  print(event.identity, event.host, event.data)\nend)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);