"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=i.createContext({}),o=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=o(e.components);return i.createElement(d.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,d=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=o(n),f=l,h=p["".concat(d,".").concat(f)]||p[f]||c[f]||a;return n?i.createElement(h,r(r({ref:t},s),{},{components:n})):i.createElement(h,r({ref:t},s))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=f;var u={};for(var d in t)hasOwnProperty.call(t,d)&&(u[d]=t[d]);u.originalType=e,u[p]="string"==typeof e?e:l,r[1]=u;for(var o=2;o<a;o++)r[o]=n[o];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1013:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>o});var i=n(7462),l=(n(7294),n(3905));const a={},r="Living",u={unversionedId:"client/lua-api/living",id:"client/lua-api/living",title:"Living",description:"Instance of Entity.",source:"@site/docs/01-client/02-lua-api/10-living.md",sourceDirName:"01-client/02-lua-api",slug:"/client/lua-api/living",permalink:"/client/lua-api/living",draft:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/02-lua-api/10-living.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Entity",permalink:"/client/lua-api/entity"},next:{title:"Player",permalink:"/client/lua-api/player"}},d={},o=[{value:"<code>living:max_health()</code>",id:"livingmax_health",level:3},{value:"<code>living:health()</code>",id:"livinghealth",level:3},{value:"<code>living:set_health()</code>",id:"livingset_health",level:3},{value:"<code>living:hitbox_enabled()</code>",id:"livinghitbox_enabled",level:3},{value:"<code>living:enable_hitbox(enabled?)</code>",id:"livingenable_hitboxenabled",level:3},{value:"<code>living:counterable()</code>",id:"livingcounterable",level:3},{value:"<code>living:set_counterable(enabled?)</code>",id:"livingset_counterableenabled",level:3},{value:"<code>living:intangible()</code>",id:"livingintangible",level:3},{value:"<code>living:set_intangible(intangible, intangible_rule?)</code>",id:"livingset_intangibleintangible-intangible_rule",level:3},{value:"<code>living:add_defense_rule(defense_rule)</code>",id:"livingadd_defense_ruledefense_rule",level:3},{value:"<code>living:remove_defense_rule(defense_rule)</code>",id:"livingremove_defense_ruledefense_rule",level:3},{value:"<code>living:apply_status(hit_flag, duration)</code>",id:"livingapply_statushit_flag-duration",level:3},{value:"<code>living:remove_status(hit_flag)</code>",id:"livingremove_statushit_flag",level:3},{value:"<code>living:remaining_status_time(hit_flag)</code>",id:"livingremaining_status_timehit_flag",level:3},{value:"<code>living:set_remaining_status_time(hit_flag, duration)</code>",id:"livingset_remaining_status_timehit_flag-duration",level:3},{value:"<code>living:register_status_callback(hit_flag, function())</code>",id:"livingregister_status_callbackhit_flag-function",level:3},{value:"<code>living.on_countered_func = function(self)</code>",id:"livingon_countered_func--functionself",level:3},{value:"DefenseJudge",id:"defensejudge",level:2},{value:"<code>judge:block_damage()</code>",id:"judgeblock_damage",level:3},{value:"<code>judge:block_impact()</code>",id:"judgeblock_impact",level:3},{value:"<code>judge:damage_blocked()</code>",id:"judgedamage_blocked",level:3},{value:"<code>judge:impact_blocked()</code>",id:"judgeimpact_blocked",level:3},{value:"DefenseRule",id:"defenserule",level:2},{value:"<code>DefenseRule.new(priority, defense_order)</code>",id:"defenserulenewpriority-defense_order",level:3},{value:"<code>defense_rule:replaced()</code>",id:"defense_rulereplaced",level:3},{value:"<code>defense_rule.on_replace_func = function()</code>",id:"defense_ruleon_replace_func--function",level:3},{value:"<code>defense_rule.can_block_func = function(judge, attacker, defender, hit_props)</code>",id:"defense_rulecan_block_func--functionjudge-attacker-defender-hit_props",level:3},{value:"<code>defense_rule.filter_statuses_func = function(hit_props)</code>",id:"defense_rulefilter_statuses_func--functionhit_props",level:3},{value:"DefenseVirusBody",id:"defensevirusbody",level:2},{value:"<code>DefenseVirusBody.new()</code>",id:"defensevirusbodynew",level:3},{value:"IntangibleRule",id:"intangiblerule",level:2},{value:"<code>IntangibleRule.new()</code>",id:"intangiblerulenew",level:3},{value:"<code>intangible_rule.duration</code>",id:"intangible_ruleduration",level:3},{value:"<code>intangible_rule.hit_weaknesses</code>",id:"intangible_rulehit_weaknesses",level:3},{value:"<code>intangible_rule.element_weaknesses</code>",id:"intangible_ruleelement_weaknesses",level:3},{value:"<code>intangible_rule.on_deactivate_func = function()</code>",id:"intangible_ruleon_deactivate_func--function",level:3}],s={toc:o},p="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"living"},"Living"),(0,l.kt)("p",null,"Instance of ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity"},"Entity"),"."),(0,l.kt)("p",null,"Living functions are accessible to all entities, but will throw if the entity is not a ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/player"},"Player"),", ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/character"},"Character"),", or ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/obstacle"},"Obstacle"),"."),(0,l.kt)("h3",{id:"livingmax_health"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:max_health()")),(0,l.kt)("p",null,"Returns the entity's max health."),(0,l.kt)("h3",{id:"livinghealth"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:health()")),(0,l.kt)("p",null,"Returns the entity's current health."),(0,l.kt)("h3",{id:"livingset_health"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_health()")),(0,l.kt)("p",null,"Sets the entity's max health."),(0,l.kt)("h3",{id:"livinghitbox_enabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:hitbox_enabled()")),(0,l.kt)("p",null,"Returns true if the entity can interact with attacks."),(0,l.kt)("h3",{id:"livingenable_hitboxenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:enable_hitbox(enabled?)")),(0,l.kt)("p",null,"Passing false will allow attacks to pass through as if the entity didn't exist."),(0,l.kt)("h3",{id:"livingcounterable"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:counterable()")),(0,l.kt)("p",null,"Returns true if the entity can currently be countered."),(0,l.kt)("h3",{id:"livingset_counterableenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_counterable(enabled?)")),(0,l.kt)("p",null,"Allows the entity to be countered when hit by an attack with a ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity#entitycontext"},"context")," created in ",(0,l.kt)("a",{parentName:"p",href:"/client/packages/#cards"},"card_init")),(0,l.kt)("h3",{id:"livingintangible"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:intangible()")),(0,l.kt)("p",null,"Returns true if an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/living#intangiblerule"},"IntangibleRule")," is active."),(0,l.kt)("h3",{id:"livingset_intangibleintangible-intangible_rule"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_intangible(intangible, intangible_rule?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"intangible"),": bool, if false the active rule is removed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"intangible_rule"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/living#intangiblerule"},"IntangibleRule"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Ignored if ",(0,l.kt)("inlineCode",{parentName:"li"},"intangible")," is false."),(0,l.kt)("li",{parentName:"ul"},"A default will be used if ",(0,l.kt)("inlineCode",{parentName:"li"},"intangible_rule")," is unset.")))),(0,l.kt)("h3",{id:"livingadd_defense_ruledefense_rule"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:add_defense_rule(defense_rule)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defense_rule"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/living#defenserule"},"DefenseRule"))),(0,l.kt)("h3",{id:"livingremove_defense_ruledefense_rule"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remove_defense_rule(defense_rule)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defense_rule"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/living#defenserule"},"DefenseRule"))),(0,l.kt)("h3",{id:"livingapply_statushit_flag-duration"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:apply_status(hit_flag, duration)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/spell#hitprops"},"HitProps")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"duration")," number, how many battle frames the effect should last")),(0,l.kt)("p",null,"Queues a status update. If the status is already applied, the remaining time will be updated to use the longer duration."),(0,l.kt)("h3",{id:"livingremove_statushit_flag"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remove_status(hit_flag)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/spell#hitprops"},"HitProps"))),(0,l.kt)("h3",{id:"livingremaining_status_timehit_flag"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remaining_status_time(hit_flag)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/spell#hitprops"},"HitProps"))),(0,l.kt)("p",null,"Returns a number representing the amount of battle frames until the status wears off."),(0,l.kt)("h3",{id:"livingset_remaining_status_timehit_flag-duration"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_remaining_status_time(hit_flag, duration)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/spell#hitprops"},"HitProps")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"duration")," number, how many battle frames the effect should last.")),(0,l.kt)("p",null,"Updates remaining time for a status already applied, or queues a new status update if isn't."),(0,l.kt)("h3",{id:"livingregister_status_callbackhit_flag-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:register_status_callback(hit_flag, function())")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/spell#hitprops"},"HitProps"))),(0,l.kt)("p",null,"The callback will be called when the ",(0,l.kt)("inlineCode",{parentName:"p"},"hit_flag")," is applied to the entity."),(0,l.kt)("h3",{id:"livingon_countered_func--functionself"},(0,l.kt)("inlineCode",{parentName:"h3"},"living.on_countered_func = function(self)")),(0,l.kt)("p",null,"Called when this entity has been countered."),(0,l.kt)("p",null,"Not to be confused with ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity#entityon_counter_func--functionself"},"entity.on_counter_func")),(0,l.kt)("h2",{id:"defensejudge"},"DefenseJudge"),(0,l.kt)("p",null,"Created for each attack resolution and passed through ",(0,l.kt)("a",{parentName:"p",href:"#defenserule"},"DefenseRule")," callbacks."),(0,l.kt)("h3",{id:"judgeblock_damage"},(0,l.kt)("inlineCode",{parentName:"h3"},"judge:block_damage()")),(0,l.kt)("p",null,"Prevents damage and statuses from applying to the defending entity."),(0,l.kt)("h3",{id:"judgeblock_impact"},(0,l.kt)("inlineCode",{parentName:"h3"},"judge:block_impact()")),(0,l.kt)("h3",{id:"judgedamage_blocked"},(0,l.kt)("inlineCode",{parentName:"h3"},"judge:damage_blocked()")),(0,l.kt)("p",null,"Returns true if ",(0,l.kt)("inlineCode",{parentName:"p"},"judge:block_damage()")," was called."),(0,l.kt)("h3",{id:"judgeimpact_blocked"},(0,l.kt)("inlineCode",{parentName:"h3"},"judge:impact_blocked()")),(0,l.kt)("p",null,"Returns true if ",(0,l.kt)("inlineCode",{parentName:"p"},"judge:block_impact()")," was called."),(0,l.kt)("h2",{id:"defenserule"},"DefenseRule"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/living#livingadd_defense_ruledefense_rule"},"living:add_defense_rule()")),(0,l.kt)("h3",{id:"defenserulenewpriority-defense_order"},(0,l.kt)("inlineCode",{parentName:"h3"},"DefenseRule.new(priority, defense_order)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"priority"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefensePriority.Barrier")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefensePriority.Body")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefensePriority.Action")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefensePriority.Trap")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefensePriority.Last")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defense_order"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefenseOrder.Always")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DefenseOrder.CollisionOnly"))))),(0,l.kt)("p",null,"Adding a DefenseRule to an entity when a DefenseRule already exists with the same priorty will replace the existing rule."),(0,l.kt)("h3",{id:"defense_rulereplaced"},(0,l.kt)("inlineCode",{parentName:"h3"},"defense_rule:replaced()")),(0,l.kt)("p",null,"Returns true if a DefenseRule with the same priority replaced this rule."),(0,l.kt)("h3",{id:"defense_ruleon_replace_func--function"},(0,l.kt)("inlineCode",{parentName:"h3"},"defense_rule.on_replace_func = function()")),(0,l.kt)("p",null,"Called when a DefenseRule with the same priority replaced this rule."),(0,l.kt)("h3",{id:"defense_rulecan_block_func--functionjudge-attacker-defender-hit_props"},(0,l.kt)("inlineCode",{parentName:"h3"},"defense_rule.can_block_func = function(judge, attacker, defender, hit_props)")),(0,l.kt)("p",null,"If the defense order is ",(0,l.kt)("inlineCode",{parentName:"p"},"DefenseOrder.Always"),", this function will be called on every hit."),(0,l.kt)("p",null,"If the defense order is ",(0,l.kt)("inlineCode",{parentName:"p"},"DefenseOrder.CollisionOnly"),", this function will be called after intangibility is determined to not block the attack."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"judge"),": ",(0,l.kt)("a",{parentName:"li",href:"#defensejudge"},"DefenseJudge")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"attacker"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/entity"},"Entity")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defender"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/entity"},"Entity")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_props"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/spell#hitprops"},"HitProps"))),(0,l.kt)("h3",{id:"defense_rulefilter_statuses_func--functionhit_props"},(0,l.kt)("inlineCode",{parentName:"h3"},"defense_rule.filter_statuses_func = function(hit_props)")),(0,l.kt)("p",null,"Called before applying damage and statuses to the entity."),(0,l.kt)("p",null,"Should return ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/spell#hitprops"},"HitProps")),(0,l.kt)("p",null,"The return value replaces the HitProps applied to the entity."),(0,l.kt)("h2",{id:"defensevirusbody"},"DefenseVirusBody"),(0,l.kt)("h3",{id:"defensevirusbodynew"},(0,l.kt)("inlineCode",{parentName:"h3"},"DefenseVirusBody.new()")),(0,l.kt)("p",null,"Creates a ",(0,l.kt)("a",{parentName:"p",href:"#defenserule"},"DefenseRule")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"DefensePriority.Body")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"DefenseOrder.CollisionOnly"),"."),(0,l.kt)("p",null,"Filters ",(0,l.kt)("inlineCode",{parentName:"p"},"Hit.Flinch")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Hit.Flash")," flags during status filtering."),(0,l.kt)("h2",{id:"intangiblerule"},"IntangibleRule"),(0,l.kt)("h3",{id:"intangiblerulenew"},(0,l.kt)("inlineCode",{parentName:"h3"},"IntangibleRule.new()")),(0,l.kt)("p",null,"Returns a new IntangibleRule."),(0,l.kt)("h3",{id:"intangible_ruleduration"},(0,l.kt)("inlineCode",{parentName:"h3"},"intangible_rule.duration")),(0,l.kt)("p",null,"The maximum time the rule should last for in game frames."),(0,l.kt)("p",null,"The default value is 120."),(0,l.kt)("h3",{id:"intangible_rulehit_weaknesses"},(0,l.kt)("inlineCode",{parentName:"h3"},"intangible_rule.hit_weaknesses")),(0,l.kt)("p",null,"Hit flags combined into a single value see ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/spell#hitprops"},"HitProps")),(0,l.kt)("p",null,"The default value is ",(0,l.kt)("inlineCode",{parentName:"p"},"Hit.PierceInvis")),(0,l.kt)("h3",{id:"intangible_ruleelement_weaknesses"},(0,l.kt)("inlineCode",{parentName:"h3"},"intangible_rule.element_weaknesses")),(0,l.kt)("p",null,"A list of ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/spell#element"},"Elements")),(0,l.kt)("p",null,"The default value is ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)("h3",{id:"intangible_ruleon_deactivate_func--function"},(0,l.kt)("inlineCode",{parentName:"h3"},"intangible_rule.on_deactivate_func = function()")),(0,l.kt)("p",null,"Called when the duration runs out, or when the defense is pierced."))}c.isMDXComponent=!0}}]);