"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8675],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),c=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(m.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(n),v=a,d=u["".concat(m,".").concat(v)]||u[v]||p[v]||i;return n?r.createElement(d,l(l({ref:t},s),{},{components:n})):r.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=v;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},5438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},l="Event Emitters",o={unversionedId:"server/lua-api/event-emitters",id:"server/lua-api/event-emitters",title:"Event Emitters",description:"Net.EventEmitter.new()",source:"@site/docs/02-server/04-lua-api/02-event-emitters.md",sourceDirName:"02-server/04-lua-api",slug:"/server/lua-api/event-emitters",permalink:"/server/lua-api/event-emitters",draft:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/02-server/04-lua-api/02-event-emitters.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"serverSidebar",previous:{title:"Lua Version And Changes",permalink:"/server/lua-api/lua-version-and-changes"},next:{title:"Server Events",permalink:"/server/lua-api/events"}},m={},c=[{value:"<code>Net.EventEmitter.new()</code>",id:"neteventemitternew",level:3},{value:"<code>emitter:emit(event_name, ...)</code>",id:"emitteremitevent_name-",level:3},{value:"<code>emitter:on(event_name, function(...))</code>",id:"emitteronevent_name-function",level:3},{value:"<code>emitter:once(event_name, function(...))</code>",id:"emitteronceevent_name-function",level:3},{value:"<code>emitter:on_any(function(event_name, ...))</code>",id:"emitteron_anyfunctionevent_name-",level:3},{value:"<code>emitter:on_any_once(function(event_name, ...))</code>",id:"emitteron_any_oncefunctionevent_name-",level:3},{value:"<code>emitter:remove_listener(event_name, callback)</code>",id:"emitterremove_listenerevent_name-callback",level:3},{value:"<code>emitter:remove_on_any_listener(event_name, callback)</code>",id:"emitterremove_on_any_listenerevent_name-callback",level:3},{value:"<code>emitter:async_iter(event_name)</code>",id:"emitterasync_iterevent_name",level:3},{value:"<code>emitter:async_iter_all(event_name)</code>",id:"emitterasync_iter_allevent_name",level:3},{value:"<code>emitter:destroy()</code>",id:"emitterdestroy",level:3}],s={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"event-emitters"},"Event Emitters"),(0,a.kt)("h3",{id:"neteventemitternew"},(0,a.kt)("inlineCode",{parentName:"h3"},"Net.EventEmitter.new()")),(0,a.kt)("p",null,"Constructs a new EventEmitter instance."),(0,a.kt)("h3",{id:"emitteremitevent_name-"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:emit(event_name, ...)")),(0,a.kt)("p",null,"Parameters after ",(0,a.kt)("inlineCode",{parentName:"p"},"event_name")," are custom and passed to event listeners."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nemitter:on("example_event", function(a, b)\n  print(a .. b) -- will output `cd`\nend)\n\nemitter:emit("example_event", "c", "d")\n')),(0,a.kt)("h3",{id:"emitteronevent_name-function"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:on(event_name, function(...))")),(0,a.kt)("p",null,"Calls the provided function every time an event matching ",(0,a.kt)("inlineCode",{parentName:"p"},"event_name")," is emitted."),(0,a.kt)("h3",{id:"emitteronceevent_name-function"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:once(event_name, function(...))")),(0,a.kt)("p",null,"Calls the provided function when an event matching ",(0,a.kt)("inlineCode",{parentName:"p"},"event_name")," is emitted, then deletes the listener."),(0,a.kt)("h3",{id:"emitteron_anyfunctionevent_name-"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:on_any(function(event_name, ...))")),(0,a.kt)("p",null,"Calls the provided function when any event is emitted. Useful for debugging."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nemitter:on_any(function(...)\n  print(...) -- will output `example_event c d`\nend)\n\nemitter:emit("example_event", "c", "d")\n')),(0,a.kt)("h3",{id:"emitteron_any_oncefunctionevent_name-"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:on_any_once(function(event_name, ...))")),(0,a.kt)("p",null,"Calls the provided function when any event is emitted, then deletes the listener."),(0,a.kt)("h3",{id:"emitterremove_listenerevent_name-callback"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:remove_listener(event_name, callback)")),(0,a.kt)("p",null,"Removes the listener to prevent future calls from the emitter.\n",(0,a.kt)("inlineCode",{parentName:"p"},"callback")," must be a reference to the same instance of the function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nlocal listener = function(a, b)\n  print(a .. b)\nend\n\nemitter:on("example_event", listener)\nemitter:emit("example_event", "c", "d")  -- will output `c d` from the listener\n\nemitter:remove_listener("example_event", listener)\nemitter:emit("example_event", "c", "d")  -- no output\n')),(0,a.kt)("h3",{id:"emitterremove_on_any_listenerevent_name-callback"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:remove_on_any_listener(event_name, callback)")),(0,a.kt)("p",null,"Removes the listener to prevent future calls from the emitter.\n",(0,a.kt)("inlineCode",{parentName:"p"},"callback")," must be a reference to the same instance of the function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nlocal listener = function(...)\n  print(...)\nend\n\nemitter:on_any(listener)\nemitter:emit("example_event", "c", "d")  -- will output `example_name c d` from the listener\n\nemitter:remove_on_any_listener(listener)\nemitter:emit("example_event", "c", "d")  -- no output\n')),(0,a.kt)("h3",{id:"emitterasync_iterevent_name"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:async_iter(event_name)")),(0,a.kt)("p",null,"Returns an iterator that returns promises with the value set to ",(0,a.kt)("inlineCode",{parentName:"p"},"...")," (Event custom parameters)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nAsync.create_scope(function()\n  -- Async.await can transform async iterators into iterators that return values directly\n  for a, b in Async.await(emitter:async_iter("example_event")) do\n    print(a .. b) -- will output "cd"\n  end\nend)\n\nemitter:emit("example_event", "c", "d")\nemitter:destroy()\n')),(0,a.kt)("h3",{id:"emitterasync_iter_allevent_name"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:async_iter_all(event_name)")),(0,a.kt)("p",null,"Returns an iterator that returns promises with the value set to ",(0,a.kt)("inlineCode",{parentName:"p"},"event_name, ..."),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nAsync.create_scope(function()\n  for event_name, a, b in Async.await(emitter:async_iter_all()) do\n    print(event_name .. " " .. a .. b) -- will output "example_event cd"\n  end\nend)\n\nemitter:emit("example_event", "c", "d")\nemitter:destroy()\n')),(0,a.kt)("h3",{id:"emitterdestroy"},(0,a.kt)("inlineCode",{parentName:"h3"},"emitter:destroy()")),(0,a.kt)("p",null,"Allows async iterators to complete. Otherwise iterators will wait until the program ends."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local emitter = Net.EventEmitter.new()\n\nAsync.create_scope(function()\n  for _ in Async.await(emitter:async_iter("example_event")) do\n  end\n\n  print("complete!") -- will only output "complete!" if emitter:destroy() is called\nend)\n\nemitter:emit("example_event", "c", "d")\nemitter:destroy()\n')))}p.isMDXComponent=!0}}]);