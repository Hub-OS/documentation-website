"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8793],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>g});var n=i(7294);function l(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){l(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,l=function(e,t){if(null==e)return{};var i,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(l[i]=e[i]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var u=n.createContext({}),p=function(e){var t=n.useContext(u),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var i=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(i),h=l,g=d["".concat(u,".").concat(h)]||d[h]||c[h]||a;return i?n.createElement(g,r(r({ref:t},s),{},{components:i})):n.createElement(g,r({ref:t},s))}));function g(e,t){var i=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=i.length,r=new Array(a);r[0]=h;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<a;p++)r[p]=i[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}h.displayName="MDXCreateElement"},3058:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=i(7462),l=(i(7294),i(3905));const a={},r="Living",o={unversionedId:"client/lua-api/entity-api/living",id:"client/lua-api/entity-api/living",title:"Living",description:"Instance of Entity.",source:"@site/docs/01-client/02-lua-api/01-entity-api/02-living.md",sourceDirName:"01-client/02-lua-api/01-entity-api",slug:"/client/lua-api/entity-api/living",permalink:"/client/lua-api/entity-api/living",draft:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/02-lua-api/01-entity-api/02-living.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Entity",permalink:"/client/lua-api/entity-api/entity"},next:{title:"Player",permalink:"/client/lua-api/entity-api/player"}},u={},p=[{value:"<code>Living.from(entity)</code>",id:"livingfromentity",level:3},{value:"<code>living:max_health()</code>",id:"livingmax_health",level:3},{value:"<code>living:health()</code>",id:"livinghealth",level:3},{value:"<code>living:set_health(health)</code>",id:"livingset_healthhealth",level:3},{value:"<code>living:hit(hit_props)</code>",id:"livinghithit_props",level:3},{value:"<code>living:hitbox_enabled()</code>",id:"livinghitbox_enabled",level:3},{value:"<code>living:enable_hitbox(enabled?)</code>",id:"livingenable_hitboxenabled",level:3},{value:"<code>living:counterable()</code>",id:"livingcounterable",level:3},{value:"<code>living:set_counterable(enabled?)</code>",id:"livingset_counterableenabled",level:3},{value:"<code>living:intangible()</code>",id:"livingintangible",level:3},{value:"<code>living:set_intangible(intangible, intangible_rule?)</code>",id:"livingset_intangibleintangible-intangible_rule",level:3},{value:"<code>living:add_defense_rule(defense_rule)</code>",id:"livingadd_defense_ruledefense_rule",level:3},{value:"<code>living:remove_defense_rule(defense_rule)</code>",id:"livingremove_defense_ruledefense_rule",level:3},{value:"<code>living:add_aux_prop(aux_prop)</code>",id:"livingadd_aux_propaux_prop",level:3},{value:"<code>living:remove_aux_prop(aux_prop)</code>",id:"livingremove_aux_propaux_prop",level:3},{value:"<code>living:apply_status(hit_flag, duration)</code>",id:"livingapply_statushit_flag-duration",level:3},{value:"<code>living:remove_status(hit_flag)</code>",id:"livingremove_statushit_flag",level:3},{value:"<code>living:remaining_status_time(hit_flag)</code>",id:"livingremaining_status_timehit_flag",level:3},{value:"<code>living:set_remaining_status_time(hit_flag, duration)</code>",id:"livingset_remaining_status_timehit_flag-duration",level:3},{value:"<code>living:register_status_callback(hit_flag, function())</code>",id:"livingregister_status_callbackhit_flag-function",level:3},{value:"<code>living:is_inactionable()</code>",id:"livingis_inactionable",level:3},{value:"<code>living:is_immobile()</code>",id:"livingis_immobile",level:3},{value:"<code>living.on_countered_func = function(self)</code>",id:"livingon_countered_func--functionself",level:3}],s={toc:p},d="wrapper";function c(e){let{components:t,...i}=e;return(0,l.kt)(d,(0,n.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"living"},"Living"),(0,l.kt)("p",null,"Instance of ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity"},"Entity"),"."),(0,l.kt)("p",null,"Living functions are accessible to all entities, but will throw if the entity is not a ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/player"},"Player"),", ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/character"},"Character"),", or ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/obstacle"},"Obstacle"),"."),(0,l.kt)("h3",{id:"livingfromentity"},(0,l.kt)("inlineCode",{parentName:"h3"},"Living.from(entity)")),(0,l.kt)("p",null,"Returns the entity passed in if the entity is considered living, otherwise returns ",(0,l.kt)("inlineCode",{parentName:"p"},"nil"),"."),(0,l.kt)("h3",{id:"livingmax_health"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:max_health()")),(0,l.kt)("p",null,"Returns the entity's max health."),(0,l.kt)("h3",{id:"livinghealth"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:health()")),(0,l.kt)("p",null,"Returns the entity's current health."),(0,l.kt)("h3",{id:"livingset_healthhealth"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_health(health)")),(0,l.kt)("p",null,"Sets the entity's max health."),(0,l.kt)("h3",{id:"livinghithit_props"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:hit(hit_props)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_props"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/hit-props"},"HitProps"))),(0,l.kt)("p",null,"Queues a hit for processing, in most cases ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/tile#tileattack_entitiesspell"},"tile:attack_entities()")," should be used instead."),(0,l.kt)("h3",{id:"livinghitbox_enabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:hitbox_enabled()")),(0,l.kt)("p",null,"Returns true if the entity can interact with attacks."),(0,l.kt)("p",null,"Different from ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity#entityhittable"},"entity:hittable()")),(0,l.kt)("h3",{id:"livingenable_hitboxenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:enable_hitbox(enabled?)")),(0,l.kt)("p",null,"Passing false will allow attacks to pass through as if the entity didn't exist."),(0,l.kt)("h3",{id:"livingcounterable"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:counterable()")),(0,l.kt)("p",null,"Returns true if the entity can currently be countered."),(0,l.kt)("h3",{id:"livingset_counterableenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_counterable(enabled?)")),(0,l.kt)("p",null,"Allows the entity to be countered when hit by an attack with a ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity#entitycontext"},"context")," created in ",(0,l.kt)("a",{parentName:"p",href:"/client/packages/#cards"},"card_init")),(0,l.kt)("h3",{id:"livingintangible"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:intangible()")),(0,l.kt)("p",null,"Returns true if an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/defense-api/intangible-rule"},"IntangibleRule")," is active."),(0,l.kt)("h3",{id:"livingset_intangibleintangible-intangible_rule"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_intangible(intangible, intangible_rule?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"intangible"),": bool, if false the active rule is removed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"intangible_rule"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/defense-api/intangible-rule"},"IntangibleRule"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Ignored if ",(0,l.kt)("inlineCode",{parentName:"li"},"intangible")," is false."),(0,l.kt)("li",{parentName:"ul"},"A default will be used if ",(0,l.kt)("inlineCode",{parentName:"li"},"intangible_rule")," is unset.")))),(0,l.kt)("h3",{id:"livingadd_defense_ruledefense_rule"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:add_defense_rule(defense_rule)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defense_rule"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/defense-api/defense-rule"},"DefenseRule"))),(0,l.kt)("h3",{id:"livingremove_defense_ruledefense_rule"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remove_defense_rule(defense_rule)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defense_rule"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/defense-api/defense-rule"},"DefenseRule"))),(0,l.kt)("h3",{id:"livingadd_aux_propaux_prop"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:add_aux_prop(aux_prop)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"aux_prop"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/defense-api/aux-prop"},"AuxProp"))),(0,l.kt)("h3",{id:"livingremove_aux_propaux_prop"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remove_aux_prop(aux_prop)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"aux_prop"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/defense-api/aux-prop"},"AuxProp"))),(0,l.kt)("h3",{id:"livingapply_statushit_flag-duration"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:apply_status(hit_flag, duration)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/hit-props"},"HitProps")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"duration")," number, how many battle frames the effect should last")),(0,l.kt)("p",null,"Queues a status update. If the status is already applied, the remaining time will be updated to use the longer duration."),(0,l.kt)("h3",{id:"livingremove_statushit_flag"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remove_status(hit_flag)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/hit-props"},"HitProps"))),(0,l.kt)("h3",{id:"livingremaining_status_timehit_flag"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:remaining_status_time(hit_flag)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/hit-props"},"HitProps"))),(0,l.kt)("p",null,"Returns a number representing the amount of battle frames until the status wears off."),(0,l.kt)("h3",{id:"livingset_remaining_status_timehit_flag-duration"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:set_remaining_status_time(hit_flag, duration)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/hit-props"},"HitProps")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"duration")," number, how many battle frames the effect should last.")),(0,l.kt)("p",null,"Updates remaining time for a status already applied, or queues a new status update if isn't."),(0,l.kt)("h3",{id:"livingregister_status_callbackhit_flag-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:register_status_callback(hit_flag, function())")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hit_flag")," a single hit flag, see ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/hit-props"},"HitProps"))),(0,l.kt)("p",null,"The callback will be called when the ",(0,l.kt)("inlineCode",{parentName:"p"},"hit_flag")," is applied to the entity."),(0,l.kt)("h3",{id:"livingis_inactionable"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:is_inactionable()")),(0,l.kt)("p",null,"Returns true if status effects that entity processing are applied."),(0,l.kt)("h3",{id:"livingis_immobile"},(0,l.kt)("inlineCode",{parentName:"h3"},"living:is_immobile()")),(0,l.kt)("p",null,"Returns true if status effects that immobilize are applied."),(0,l.kt)("h3",{id:"livingon_countered_func--functionself"},(0,l.kt)("inlineCode",{parentName:"h3"},"living.on_countered_func = function(self)")),(0,l.kt)("p",null,"Called when this entity has been countered."),(0,l.kt)("p",null,"Not to be confused with ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity#entityon_counter_func--functionself"},"entity.on_counter_func")))}c.isMDXComponent=!0}}]);