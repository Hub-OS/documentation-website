"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2015],{3851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>o,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"client/lua-api/attack-api/turn-gauge","title":"TurnGauge","description":"TurnGauge.enabled()","source":"@site/docs/01-client/04-lua-api/04-attack-api/07-turn-gauge.md","sourceDirName":"01-client/04-lua-api/04-attack-api","slug":"/client/lua-api/attack-api/turn-gauge","permalink":"/client/lua-api/attack-api/turn-gauge","draft":false,"unlisted":false,"editUrl":"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/04-lua-api/04-attack-api/07-turn-gauge.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"clientSidebar","previous":{"title":"Status","permalink":"/client/lua-api/attack-api/status"},"next":{"title":"DefenseRule","permalink":"/client/lua-api/defense-api/defense-rule"}}');var a=t(4848),u=t(8453);const i={},s="TurnGauge",d={},l=[{value:"<code>TurnGauge.enabled()</code>",id:"turngaugeenabled",level:3},{value:"<code>TurnGauge.set_enabled(enabled)</code>",id:"turngaugeset_enabledenabled",level:3},{value:"<code>TurnGauge.frozen()</code>",id:"turngaugefrozen",level:3},{value:"<code>TurnGauge.progress()</code>",id:"turngaugeprogress",level:3},{value:"<code>TurnGauge.time()</code>",id:"turngaugetime",level:3},{value:"<code>TurnGauge.max_time()</code>",id:"turngaugemax_time",level:3},{value:"<code>TurnGauge.set_time(time)</code>",id:"turngaugeset_timetime",level:3},{value:"<code>TurnGauge.set_max_time(time)</code>",id:"turngaugeset_max_timetime",level:3},{value:"<code>TurnGauge.reset_max_time()</code>",id:"turngaugereset_max_time",level:3},{value:"<code>TurnGauge.current_turn()</code>",id:"turngaugecurrent_turn",level:3},{value:"<code>TurnGauge.complete_turn()</code>",id:"turngaugecomplete_turn",level:3},{value:"<code>TurnGauge.turn_limit()</code>",id:"turngaugeturn_limit",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",...(0,u.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"turngauge",children:"TurnGauge"})}),"\n",(0,a.jsx)(n.h3,{id:"turngaugeenabled",children:(0,a.jsx)(n.code,{children:"TurnGauge.enabled()"})}),"\n",(0,a.jsx)(n.p,{children:"Returns true if the turn gauge is visible, automatically progressing, and allows the turn to end."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugeset_enabledenabled",children:(0,a.jsx)(n.code,{children:"TurnGauge.set_enabled(enabled)"})}),"\n",(0,a.jsx)(n.p,{children:"Hides the turn gauge, disables automatic progression, and prevents the turn from ending when disabled."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugefrozen",children:(0,a.jsx)(n.code,{children:"TurnGauge.frozen()"})}),"\n",(0,a.jsxs)(n.p,{children:["Returns true if time is frozen from ",(0,a.jsx)(n.a,{href:"/client/lua-api/attack-api/cards#card_propertiestime_freeze",children:"time freeze"})," ",(0,a.jsx)(n.a,{href:"/client/lua-api/attack-api/action",children:"Actions"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"turngaugeprogress",children:(0,a.jsx)(n.code,{children:"TurnGauge.progress()"})}),"\n",(0,a.jsx)(n.p,{children:"Returns a number representing the turn gauge's progress as a value between 0 and 1."}),"\n",(0,a.jsxs)(n.p,{children:["Same as ",(0,a.jsx)(n.code,{children:"TurnGauge.time() / TurnGauge.max_time()"})]}),"\n",(0,a.jsx)(n.h3,{id:"turngaugetime",children:(0,a.jsx)(n.code,{children:"TurnGauge.time()"})}),"\n",(0,a.jsx)(n.p,{children:"Returns a number representing the turn gauge's progress in elapsed frames."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugemax_time",children:(0,a.jsx)(n.code,{children:"TurnGauge.max_time()"})}),"\n",(0,a.jsx)(n.p,{children:"Returns a number representing the total elapsed frames required to end a turn."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugeset_timetime",children:(0,a.jsx)(n.code,{children:"TurnGauge.set_time(time)"})}),"\n",(0,a.jsx)(n.p,{children:"Sets the turn gauge's progress in elapsed frames."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugeset_max_timetime",children:(0,a.jsx)(n.code,{children:"TurnGauge.set_max_time(time)"})}),"\n",(0,a.jsx)(n.p,{children:"Sets the total elapsed frames required to end a turn."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugereset_max_time",children:(0,a.jsx)(n.code,{children:"TurnGauge.reset_max_time()"})}),"\n",(0,a.jsx)(n.p,{children:"Sets the total elapsed frames required to end a turn to the default (512)."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugecurrent_turn",children:(0,a.jsx)(n.code,{children:"TurnGauge.current_turn()"})}),"\n",(0,a.jsx)(n.p,{children:"Returns a number, represents the current turn number. Starts at 0 during the intro, increments when Card Select opens."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugecomplete_turn",children:(0,a.jsx)(n.code,{children:"TurnGauge.complete_turn()"})}),"\n",(0,a.jsx)(n.p,{children:"Ends the turn, causing Card Select to appear."}),"\n",(0,a.jsx)(n.h3,{id:"turngaugeturn_limit",children:(0,a.jsx)(n.code,{children:"TurnGauge.turn_limit()"})}),"\n",(0,a.jsxs)(n.p,{children:["Returns a number or nil, modified through ",(0,a.jsxs)(n.a,{href:"/client/lua-api/field-api/encounter#encounterset_turn_limitlimit",children:["encounter",":set_turn_limit","()"]}),"."]})]})}function o(e={}){const{wrapper:n}={...(0,u.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const a={},u=r.createContext(a);function i(e){const n=r.useContext(u);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(u.Provider,{value:n},e.children)}}}]);