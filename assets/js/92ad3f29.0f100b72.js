"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2741],{259:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/type-definitions-ed62267e6467f84e4bfe4f5f4366b30d.png"},1441:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/open-folder-b95c79362d27c476a342425cdecfb3c6.png"},3342:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/files/hubos-client.d-637317851dc9418b40206d5f975a2f98.lua"},3680:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"client/getting-started","title":"Getting Started","description":"Steps","source":"@site/docs/01-client/00-getting-started.md","sourceDirName":"01-client","slug":"/client/getting-started","permalink":"/client/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/00-getting-started.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{},"sidebar":"clientSidebar","next":{"title":"Packages","permalink":"/client/packages"}}');var t=i(4848),o=i(8453);const d={},r="Getting Started",l={},a=[{value:"Steps",id:"steps",level:2},{value:"Install Visual Studio Code",id:"install-visual-studio-code",level:2},{value:"Open the Mods Folder in VS Code",id:"open-the-mods-folder-in-vs-code",level:2},{value:"Install Extensions",id:"install-extensions",level:2},{value:"Add Type Definitions File",id:"add-type-definitions-file",level:2},{value:"Understanding the Mods Folder",id:"understanding-the-mods-folder",level:2},{value:"Your First Mod",id:"your-first-mod",level:2},{value:"Utilizing Types",id:"utilizing-types",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,t.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#install-visual-studio-code",children:"Install VS Code"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#open-the-mods-folder-in-vs-code",children:"Open Mods Folder in VS Code"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#install-extensions",children:"Install Extensions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#add-type-definitions-file",children:"Add Type Definitions File"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#understanding-the-mods-folder",children:"Understanding the Mods Folder"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#your-first-mod",children:"Your First Mod!"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"install-visual-studio-code",children:"Install Visual Studio Code"}),"\n",(0,t.jsxs)(n.p,{children:["Download from the ",(0,t.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"official website"})]}),"\n",(0,t.jsx)(n.h2,{id:"open-the-mods-folder-in-vs-code",children:"Open the Mods Folder in VS Code"}),"\n",(0,t.jsxs)(n.p,{children:["You can open your mods folder in VS Code by right clicking on the folder and selecting ",(0,t.jsx)(n.code,{children:"Open with Code"})," or by using ",(0,t.jsx)(n.code,{children:"File -> Open Folder"})," within VS Code."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Open Folder Dropdown Option",src:i(1441).A+"",width:"430",height:"383"})}),"\n",(0,t.jsx)(n.h2,{id:"install-extensions",children:"Install Extensions"}),"\n",(0,t.jsx)(n.p,{children:"You'll want at minimum the Lua extension by sumneko, as it will provide syntax highlighting and autocomplete for Lua:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Sumneko Extension",src:i(7710).A+"",width:"684",height:"466"})}),"\n",(0,t.jsx)(n.h2,{id:"add-type-definitions-file",children:"Add Type Definitions File"}),"\n",(0,t.jsxs)(n.p,{children:["You can add our client type definitions file to your project / mods folder: ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(3342).A+"",children:"Client Type Definitions"})]}),"\n",(0,t.jsx)(n.p,{children:"It should look like this inside of VS Code:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Type Definitions File",src:i(259).A+"",width:"1095",height:"601"})}),"\n",(0,t.jsx)(n.h2,{id:"understanding-the-mods-folder",children:"Understanding the Mods Folder"}),"\n",(0,t.jsxs)(n.p,{children:["Each category of mod has a specific folder it should exist in, some categories may share a folder (such as ",(0,t.jsx)(n.code,{children:"library"})," and ",(0,t.jsx)(n.code,{children:"pack"})," / mod packs)."]}),"\n",(0,t.jsxs)(n.p,{children:["You can read more details about where each category of mod and what is expected in ",(0,t.jsx)(n.a,{href:"/client/packages",children:"Packages"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["At minimum a mod must contain a ",(0,t.jsx)(n.code,{children:"package.toml"})," file for meta information such as the category, name, and package ID."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Minimal Mod",src:i(4350).A+"",width:"1186",height:"430"})}),"\n",(0,t.jsx)(n.h2,{id:"your-first-mod",children:"Your First Mod"}),"\n",(0,t.jsx)(n.p,{children:"The best way to learn is to add your own changes to simple mods from others before trying from scratch."}),"\n",(0,t.jsx)(n.p,{children:"Some starter mods:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://hubos.dev/mods/com.discord.Konstinople%237692.player.Man",children:"Man"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Features: Simple forms, basic attacks."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://hubos.dev/mods/dev.konstinople.player.Bass",children:"Bass"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Features: Emotions, custom actions, chip charging, intro."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://hubos.dev/mods/BattleNetwork6.ProtoMan",children:"ProtoMan"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Features: Emotions, custom actions, chip charging, special attack, fixed cards, reusing cards as attacks."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["If you want to start from scratch take a look at the ",(0,t.jsx)(n.a,{href:"/client/packages",children:"Packages section"})," for the base requirements of each type of mod."]}),"\n",(0,t.jsx)(n.h2,{id:"utilizing-types",children:"Utilizing Types"}),"\n",(0,t.jsx)(n.p,{children:"If you provide correct type information for your function parameters, the Lua extension can provide in-editor documentation and code suggestions from the type definitions file."}),"\n",(0,t.jsxs)(n.p,{children:["Proper annotations for script entry functions can be found in the ",(0,t.jsx)(n.a,{href:"/client/packages",children:"Packages section"})," (Ctrl+F for ",(0,t.jsx)(n.code,{children:"entry.lua"}),")."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://luals.github.io/wiki/annotations/",children:"More details on Sumneko Lua's Annotations"})}),"\n",(0,t.jsxs)(n.p,{children:["An example of how this works, see how the ",(0,t.jsx)(n.code,{children:"button"})," variable gets suggestions and documentation from only adding ",(0,t.jsx)(n.code,{children:"---@param player Entity"}),":"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Autocomplete",src:i(6423).A+"",width:"1269",height:"467"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},4350:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/minimal-mod-9d7958d6ae95606ed6dabac48dbe0659.png"},6423:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/utilizing-types-f711e8f705950952ea0c29f158cfeaeb.png"},7710:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/sumneko-install-f67941faaa131760becd78afe10ce16f.png"},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var s=i(6540);const t={},o=s.createContext(t);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);