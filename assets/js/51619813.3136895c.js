"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7011],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>_});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(a),m=l,_=u["".concat(c,".").concat(m)]||u[m]||s[m]||r;return a?n.createElement(_,i(i({ref:t},p),{},{components:a})):n.createElement(_,i({ref:t},p))}));function _(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:l,i[1]=o;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4499:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=a(7462),l=(a(7294),a(3905));const r={},i="Player",o={unversionedId:"client/lua-api/entity-api/player",id:"client/lua-api/entity-api/player",title:"Player",description:"Instance of Entity. All Living and Character functions are available as well.",source:"@site/docs/01-client/02-lua-api/01-entity-api/03-player.md",sourceDirName:"01-client/02-lua-api/01-entity-api",slug:"/client/lua-api/entity-api/player",permalink:"/client/lua-api/entity-api/player",draft:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/02-lua-api/01-entity-api/03-player.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Living",permalink:"/client/lua-api/entity-api/living"},next:{title:"Character",permalink:"/client/lua-api/entity-api/character"}},c={},d=[{value:"<code>Player.from(entity)</code>",id:"playerfromentity",level:3},{value:"<code>player:emotions()</code>",id:"playeremotions",level:3},{value:"<code>player:emotion()</code>",id:"playeremotion",level:3},{value:"<code>player:set_emotion(state)</code>",id:"playerset_emotionstate",level:3},{value:"<code>player:input_has(input_query)</code>",id:"playerinput_hasinput_query",level:3},{value:"<code>player:play_audio(path, audio_behavior?)</code>",id:"playerplay_audiopath-audio_behavior",level:3},{value:"<code>player:set_fully_charged_color(color)</code>",id:"playerset_fully_charged_colorcolor",level:3},{value:"<code>player:set_charge_position(x, y)</code>",id:"playerset_charge_positionx-y",level:3},{value:"<code>player:slide_when_moving()</code>",id:"playerslide_when_moving",level:3},{value:"<code>player:set_slide_when_moving(bool?)</code>",id:"playerset_slide_when_movingbool",level:3},{value:"<code>player:queue_default_player_movement(tile)</code>",id:"playerqueue_default_player_movementtile",level:3},{value:"<code>player:has_regular_card()</code>",id:"playerhas_regular_card",level:3},{value:"<code>player:deck_cards()</code>",id:"playerdeck_cards",level:3},{value:"<code>player:deck_card(index)</code>",id:"playerdeck_cardindex",level:3},{value:"<code>player:set_deck_card(index, deck_card)</code>",id:"playerset_deck_cardindex-deck_card",level:3},{value:"<code>player:remove_deck_card(index)</code>",id:"playerremove_deck_cardindex",level:3},{value:"<code>player:insert_deck_card(index, deck_card)</code>",id:"playerinsert_deck_cardindex-deck_card",level:3},{value:"<code>player:staged_items_confirmed()</code>",id:"playerstaged_items_confirmed",level:3},{value:"<code>player:confirm_staged_items()</code>",id:"playerconfirm_staged_items",level:3},{value:"<code>player:stage_card(card_properties, function()?)</code>",id:"playerstage_cardcard_properties-function",level:3},{value:"<code>player:stage_deck_card(deck_index, function()?)</code>",id:"playerstage_deck_carddeck_index-function",level:3},{value:"<code>player:stage_deck_discard(deck_index, function()?)</code>",id:"playerstage_deck_discarddeck_index-function",level:3},{value:"<code>player:stage_form(form, texture_path?, function()?)</code>",id:"playerstage_formform-texture_path-function",level:3},{value:"<code>player:stage_icon(texture_path, function()?)</code>",id:"playerstage_icontexture_path-function",level:3},{value:"<code>player:pop_staged_item()</code>",id:"playerpop_staged_item",level:3},{value:"<code>player:staged_items()</code>",id:"playerstaged_items",level:3},{value:"<code>player:staged_item(index)</code>",id:"playerstaged_itemindex",level:3},{value:"<code>player:staged_item_texture(index)</code>",id:"playerstaged_item_textureindex",level:3},{value:"<code>player:card_select_restriction()</code>",id:"playercard_select_restriction",level:3},{value:"<code>player:set_card_selection_blocked(bool)</code>",id:"playerset_card_selection_blockedbool",level:3},{value:"<code>player:set_fixed_card(card_properties)</code>",id:"playerset_fixed_cardcard_properties",level:3},{value:"<code>player:create_card_button(slot_count)</code>",id:"playercreate_card_buttonslot_count",level:3},{value:"<code>player:create_special_button()</code>",id:"playercreate_special_button",level:3},{value:"<code>player:create_form()</code>",id:"playercreate_form",level:3},{value:"<code>player:create_hidden_form()</code>",id:"playercreate_hidden_form",level:3},{value:"<code>player:get_augment(package_id)</code>",id:"playerget_augmentpackage_id",level:3},{value:"<code>player:augments()</code>",id:"playeraugments",level:3},{value:"<code>player:boost_augment(package_id, level_increment)</code>",id:"playerboost_augmentpackage_id-level_increment",level:3},{value:"<code>player:boost_max_health(health)</code>",id:"playerboost_max_healthhealth",level:3},{value:"<code>player:hand_size()</code>",id:"playerhand_size",level:3},{value:"<code>player:boost_hand_size(size)</code>",id:"playerboost_hand_sizesize",level:3},{value:"<code>player:attack_level()</code>",id:"playerattack_level",level:3},{value:"<code>player:boost_attack_level(increment)</code>",id:"playerboost_attack_levelincrement",level:3},{value:"<code>player:rapid_level()</code>",id:"playerrapid_level",level:3},{value:"<code>player:boost_rapid_level(increment)</code>",id:"playerboost_rapid_levelincrement",level:3},{value:"<code>player:charge_level()</code>",id:"playercharge_level",level:3},{value:"<code>player:boost_charge_level(increment)</code>",id:"playerboost_charge_levelincrement",level:3},{value:"<code>player:calculate_default_charge_time()</code>",id:"playercalculate_default_charge_time",level:3},{value:"<code>player:calculate_charge_time()</code>",id:"playercalculate_charge_time",level:3},{value:"<code>player.calculate_charge_time_func = function(self): number</code>",id:"playercalculate_charge_time_func--functionself-number",level:3},{value:"<code>player.normal_attack_func = function(self): Action|nil</code>",id:"playernormal_attack_func--functionself-actionnil",level:3},{value:"<code>player.charged_attack_func = function(self): Action|nil</code>",id:"playercharged_attack_func--functionself-actionnil",level:3},{value:"<code>player.special_attack_func = function(self): Action</code>",id:"playerspecial_attack_func--functionself-action",level:3},{value:"<code>player.can_charge_card_func = function(card_properties): boolean</code>",id:"playercan_charge_card_func--functioncard_properties-boolean",level:3},{value:"<code>player.charged_card_func = function(self, card_properties): Action|nil</code>",id:"playercharged_card_func--functionself-card_properties-actionnil",level:3},{value:"<code>player.movement_func = function(self, direction)</code>",id:"playermovement_func--functionself-direction",level:3},{value:"PlayerForm",id:"playerform",level:2},{value:"<code>player_form:index()</code>",id:"player_formindex",level:3},{value:"<code>player_form:set_mugshot_texture(path)</code>",id:"player_formset_mugshot_texturepath",level:3},{value:"<code>player_form:set_description(description?)</code>",id:"player_formset_descriptiondescription",level:3},{value:"<code>player_form:set_fixed_card(card_properties)</code>",id:"player_formset_fixed_cardcard_properties",level:3},{value:"<code>player_form:create_card_button(slot_count)</code>",id:"player_formcreate_card_buttonslot_count",level:3},{value:"<code>player_form:create_special_button()</code>",id:"player_formcreate_special_button",level:3},{value:"<code>player_form.on_activate_func = function(self, player)</code>",id:"player_formon_activate_func--functionself-player",level:3},{value:"<code>player_form.on_deactivate_func = function(self, player)</code>",id:"player_formon_deactivate_func--functionself-player",level:3},{value:"<code>player_form.on_update_func = function(self, player)</code>",id:"player_formon_update_func--functionself-player",level:3},{value:"<code>player_form.calculate_charge_time_func = function(self, player): number</code>",id:"player_formcalculate_charge_time_func--functionself-player-number",level:3},{value:"<code>player_form.normal_attack_func = function(self, player): Action|nil</code>",id:"player_formnormal_attack_func--functionself-player-actionnil",level:3},{value:"<code>player_form.charged_attack_func = function(self, player): Action|nil</code>",id:"player_formcharged_attack_func--functionself-player-actionnil",level:3},{value:"<code>player_form.special_attack_func = function(self, player): Action|nil</code>",id:"player_formspecial_attack_func--functionself-player-actionnil",level:3},{value:"<code>player_form.can_charge_card_func = function(card_properties): boolean</code>",id:"player_formcan_charge_card_func--functioncard_properties-boolean",level:3},{value:"<code>player_form.charged_card_func = function(self, card_properties): Action|nil</code>",id:"player_formcharged_card_func--functionself-card_properties-actionnil",level:3},{value:"<code>player_form.movement_func = function(self, player)</code>",id:"player_formmovement_func--functionself-player",level:3},{value:"Augment",id:"augment",level:2},{value:"<code>augment:id()</code>",id:"augmentid",level:3},{value:"<code>augment:level()</code>",id:"augmentlevel",level:3},{value:"<code>augment:owner()</code>",id:"augmentowner",level:3},{value:"<code>augment:has_tag(tag)</code>",id:"augmenthas_tagtag",level:3},{value:"<code>augment:set_fixed_card(card_properties)</code>",id:"augmentset_fixed_cardcard_properties",level:3},{value:"<code>augment:create_card_button(slot_count)</code>",id:"augmentcreate_card_buttonslot_count",level:3},{value:"<code>augment:create_special_button()</code>",id:"augmentcreate_special_button",level:3},{value:"<code>augment.calculate_charge_time_func = function(self): number</code>",id:"augmentcalculate_charge_time_func--functionself-number",level:3},{value:"<code>augment.normal_attack_func = function(self): Action|nil</code>",id:"augmentnormal_attack_func--functionself-actionnil",level:3},{value:"<code>augment.charged_attack_func = function(self): Action|nil</code>",id:"augmentcharged_attack_func--functionself-actionnil",level:3},{value:"<code>augment.special_attack_func = function(self): Action|nil</code>",id:"augmentspecial_attack_func--functionself-actionnil",level:3},{value:"<code>augment.can_charge_card_func = function(card_properties): boolean</code>",id:"augmentcan_charge_card_func--functioncard_properties-boolean",level:3},{value:"<code>augment.charged_card_func = function(self, card_properties): Action|nil</code>",id:"augmentcharged_card_func--functionself-card_properties-actionnil",level:3},{value:"<code>augment.movement_func = function(self, direction)</code>",id:"augmentmovement_func--functionself-direction",level:3},{value:"<code>augment.on_delete_func = function(self)</code>",id:"augmenton_delete_func--functionself",level:3},{value:"CardSelectButton",id:"cardselectbutton",level:2},{value:"<code>button:sprite()</code>",id:"buttonsprite",level:3},{value:"<code>button:texture()</code>",id:"buttontexture",level:3},{value:"<code>button:set_texture(path)</code>",id:"buttonset_texturepath",level:3},{value:"<code>button:animation()</code>",id:"buttonanimation",level:3},{value:"<code>button:preview_sprite()</code>",id:"buttonpreview_sprite",level:3},{value:"<code>button:preview_texture()</code>",id:"buttonpreview_texture",level:3},{value:"<code>button:set_preview_texture(path)</code>",id:"buttonset_preview_texturepath",level:3},{value:"<code>button:preview_animation()</code>",id:"buttonpreview_animation",level:3},{value:"<code>button:use_card_preview(card_properties)</code>",id:"buttonuse_card_previewcard_properties",level:3},{value:"<code>button:use_fixed_card_cursor(bool)</code>",id:"buttonuse_fixed_card_cursorbool",level:3},{value:"<code>button:use_default_audio(bool)</code>",id:"buttonuse_default_audiobool",level:3},{value:"<code>button:set_description(description?)</code>",id:"buttonset_descriptiondescription",level:3},{value:"<code>button:use_card_description(card_properties)</code>",id:"buttonuse_card_descriptioncard_properties",level:3},{value:"<code>button:owner()</code>",id:"buttonowner",level:3},{value:"<code>button.on_selection_change_func = function(self)</code>",id:"buttonon_selection_change_func--functionself",level:3},{value:"<code>button.use_func = function(self): boolean</code>",id:"buttonuse_func--functionself-boolean",level:3},{value:"StagedItem",id:"stageditem",level:2},{value:"<code>staged_item.category</code>",id:"staged_itemcategory",level:3},{value:"<code>staged_item.index</code>",id:"staged_itemindex",level:3},{value:"<code>staged_item.card_properties</code>",id:"staged_itemcard_properties",level:3}],p={toc:d},u="wrapper";function s(e){let{components:t,...a}=e;return(0,l.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"player"},"Player"),(0,l.kt)("p",null,"Instance of ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity"},"Entity"),". All ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/living"},"Living")," and ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/character"},"Character")," functions are available as well."),(0,l.kt)("p",null,"Player functions are accessible to all entities, but will throw if the entity is not a Player."),(0,l.kt)("h3",{id:"playerfromentity"},(0,l.kt)("inlineCode",{parentName:"h3"},"Player.from(entity)")),(0,l.kt)("p",null,"Returns the entity passed in if the entity is a player, otherwise returns ",(0,l.kt)("inlineCode",{parentName:"p"},"nil"),"."),(0,l.kt)("h3",{id:"playeremotions"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:emotions()")),(0,l.kt)("p",null,"Returns a list of valid values for ",(0,l.kt)("inlineCode",{parentName:"p"},"player:set_emotion()"),"."),(0,l.kt)("h3",{id:"playeremotion"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:emotion()")),(0,l.kt)("p",null,"Returns the name of the current emotion animation state."),(0,l.kt)("h3",{id:"playerset_emotionstate"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_emotion(state)")),(0,l.kt)("p",null,"Sets the current animation state for the player's emotion."),(0,l.kt)("p",null,"If the state doesn't exist, this does nothing."),(0,l.kt)("h3",{id:"playerinput_hasinput_query"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:input_has(input_query)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"input_query"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Input.Held.*")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Input.Pressed.*"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Left")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Right")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Down")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Use")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Special")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Shoot")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"FaceLeft")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"FaceRight")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"LeftShoulder")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RightShoulder")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"EndTurn")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Ready"))))))),(0,l.kt)("p",null,"Returns true if ",(0,l.kt)("inlineCode",{parentName:"p"},"input_query")," matches the player's current input state."),(0,l.kt)("h3",{id:"playerplay_audiopath-audio_behavior"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:play_audio(path, audio_behavior?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"path"),": file path relative to script file, use values returned from ",(0,l.kt)("inlineCode",{parentName:"li"},"Resources.load_audio()")," for better performance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"audio_behavior"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/resource-api/resources#audiobehavior"},"AudioBehavior"))),(0,l.kt)("p",null,"Plays an audio file to only this player."),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/resources#resourcesplay_audiopath-audio_behavior"},"Resources.play_audio()")," for playing audio for all players."),(0,l.kt)("h3",{id:"playerset_fully_charged_colorcolor"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_fully_charged_color(color)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"color"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/resource-api/sprite#color"},"Color"))),(0,l.kt)("p",null,"Sets the color of the fully charged sprite."),(0,l.kt)("h3",{id:"playerset_charge_positionx-y"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_charge_position(x, y)")),(0,l.kt)("p",null,"Sets the offset of the fully charged sprite."),(0,l.kt)("h3",{id:"playerslide_when_moving"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:slide_when_moving()")),(0,l.kt)("p",null,"Returns a bool."),(0,l.kt)("h3",{id:"playerset_slide_when_movingbool"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_slide_when_moving(bool?)")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the player will slide to tiles and continue using the ",(0,l.kt)("inlineCode",{parentName:"p"},"PLAYER_IDLE")," state."),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", the player will teleport to tiles and animate with the ",(0,l.kt)("inlineCode",{parentName:"p"},"PLAYER_MOVE")," state."),(0,l.kt)("h3",{id:"playerqueue_default_player_movementtile"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:queue_default_player_movement(tile)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tile"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/field-api/tile"},"Tile"))),(0,l.kt)("p",null,"Queues a movement with the default internal logic."),(0,l.kt)("h3",{id:"playerhas_regular_card"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:has_regular_card()")),(0,l.kt)("p",null,"Returns a bool."),(0,l.kt)("h3",{id:"playerdeck_cards"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:deck_cards()")),(0,l.kt)("p",null,"Returns a list of ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/cards#deckcard"},"DeckCard"),"."),(0,l.kt)("h3",{id:"playerdeck_cardindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:deck_card(index)")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/cards#deckcard"},"DeckCard")," or nil."),(0,l.kt)("h3",{id:"playerset_deck_cardindex-deck_card"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_deck_card(index, deck_card)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index"),": number, 1 is the first card in the deck."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"deck_card"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/cards#deckcard"},"DeckCard"))),(0,l.kt)("p",null,"If there's no card at this index, nothing happens."),(0,l.kt)("h3",{id:"playerremove_deck_cardindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:remove_deck_card(index)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index"),": number, 1 is the first card in the deck.")),(0,l.kt)("p",null,"Removes a card from the player's deck."),(0,l.kt)("p",null,"Any ",(0,l.kt)("a",{parentName:"p",href:"#stageditem"},"StagedItem")," referencing this card will be dropped."),(0,l.kt)("h3",{id:"playerinsert_deck_cardindex-deck_card"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:insert_deck_card(index, deck_card)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index"),": number, 1 is the first card in the deck."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"deck_card"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/cards#deckcard"},"DeckCard"))),(0,l.kt)("p",null,"Removes a card from the player's deck."),(0,l.kt)("p",null,"Any ",(0,l.kt)("a",{parentName:"p",href:"#stageditem"},"StagedItem")," referencing this card will be dropped."),(0,l.kt)("h3",{id:"playerstaged_items_confirmed"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:staged_items_confirmed()")),(0,l.kt)("p",null,"Returns true if Card Select can close."),(0,l.kt)("h3",{id:"playerconfirm_staged_items"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:confirm_staged_items()")),(0,l.kt)("p",null,"Allows Card Select to close."),(0,l.kt)("h3",{id:"playerstage_cardcard_properties-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:stage_card(card_properties, function()?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"card_properties"),": ",(0,l.kt)("a",{parentName:"li",href:"/client/lua-api/attack-api/cards#cardproperties"},"CardProperties")),(0,l.kt)("li",{parentName:"ul"},"The callback will be called when the player removes the StagedItem.")),(0,l.kt)("p",null,"Appends a new ",(0,l.kt)("a",{parentName:"p",href:"#stageitem"},"StageItem")," to display in Card Select."),(0,l.kt)("h3",{id:"playerstage_deck_carddeck_index-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:stage_deck_card(deck_index, function()?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"deck_index"),": number, 1 is the first card in the deck."),(0,l.kt)("li",{parentName:"ul"},"The callback will be called when the player removes the StagedItem.")),(0,l.kt)("p",null,"Appends a new ",(0,l.kt)("a",{parentName:"p",href:"#stageitem"},"StageItem")," to display in Card Select."),(0,l.kt)("p",null,"Any StageItems already referencing ",(0,l.kt)("inlineCode",{parentName:"p"},"deck_index")," will be removed."),(0,l.kt)("h3",{id:"playerstage_deck_discarddeck_index-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:stage_deck_discard(deck_index, function()?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"deck_index"),": number, 1 is the first card in the deck."),(0,l.kt)("li",{parentName:"ul"},"The callback will be called when the player removes the StagedItem.")),(0,l.kt)("p",null,"Appends a new ",(0,l.kt)("a",{parentName:"p",href:"#stageitem"},"StageItem")," to display in Card Select."),(0,l.kt)("p",null,"Any StageItems already referencing ",(0,l.kt)("inlineCode",{parentName:"p"},"deck_index")," will be removed."),(0,l.kt)("h3",{id:"playerstage_formform-texture_path-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:stage_form(form, texture_path?, function()?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"form"),": ",(0,l.kt)("a",{parentName:"li",href:"#playerform"},"PlayerForm")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"texture_path"),": The texture to use for the icon."),(0,l.kt)("li",{parentName:"ul"},"The callback will be called when the player removes the StagedItem.")),(0,l.kt)("p",null,"Prepends a new ",(0,l.kt)("a",{parentName:"p",href:"#stageitem"},"StageItem")," that will be displayed in card select if a texture is set. If a form is already staged this StageItem will replace the existing item."),(0,l.kt)("h3",{id:"playerstage_icontexture_path-function"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:stage_icon(texture_path, function()?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"texture_path"),": The texture to use for the icon."),(0,l.kt)("li",{parentName:"ul"},"The callback will be called when the player removes the StagedItem.")),(0,l.kt)("p",null,"Appends a new ",(0,l.kt)("a",{parentName:"p",href:"#stageitem"},"StageItem")," to display in Card Select."),(0,l.kt)("h3",{id:"playerpop_staged_item"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:pop_staged_item()")),(0,l.kt)("p",null,"Removes the latest ",(0,l.kt)("a",{parentName:"p",href:"#stageditem"},"StagedItem"),", calling the undo callback."),(0,l.kt)("h3",{id:"playerstaged_items"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:staged_items()")),(0,l.kt)("p",null,"Returns a list of ",(0,l.kt)("a",{parentName:"p",href:"#stageditem"},"StagedItem")),(0,l.kt)("h3",{id:"playerstaged_itemindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:staged_item(index)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index"),": number, starts with 1.")),(0,l.kt)("p",null,"Returns a ",(0,l.kt)("a",{parentName:"p",href:"#stageditem"},"StagedItem")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"nil"),"."),(0,l.kt)("h3",{id:"playerstaged_item_textureindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:staged_item_texture(index)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index"),": number, starts with 1.")),(0,l.kt)("p",null,"Returns a string. Represents the path to the StagedItem's icon texture."),(0,l.kt)("h3",{id:"playercard_select_restriction"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:card_select_restriction()")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"{ package_id?: string, code?: string }"),". Cards must match any of the set fields."),(0,l.kt)("h3",{id:"playerset_card_selection_blockedbool"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_card_selection_blocked(bool)")),(0,l.kt)("p",null,"Prevents selection in Card Select and hides the cursor."),(0,l.kt)("h3",{id:"playerset_fixed_cardcard_properties"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:set_fixed_card(card_properties)")),(0,l.kt)("p",null,"Dedicates the last card slot in Card Select to the specified card. Internally defined as a ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton"),"."),(0,l.kt)("h3",{id:"playercreate_card_buttonslot_count"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:create_card_button(slot_count)")),(0,l.kt)("p",null,"Creates a button embedded in the end of the card list in Card Select."),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton")),(0,l.kt)("h3",{id:"playercreate_special_button"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:create_special_button()")),(0,l.kt)("p",null,'Creates a button under the "Confirm" button in Card Select.'),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton")),(0,l.kt)("h3",{id:"playercreate_form"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:create_form()")),(0,l.kt)("p",null,"Returns a new ",(0,l.kt)("a",{parentName:"p",href:"#playerform"},"PlayerForm"),"."),(0,l.kt)("p",null,"Can be used up to five times before throwing."),(0,l.kt)("h3",{id:"playercreate_hidden_form"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:create_hidden_form()")),(0,l.kt)("p",null,"Returns a new ",(0,l.kt)("a",{parentName:"p",href:"#playerform"},"PlayerForm"),"."),(0,l.kt)("h3",{id:"playerget_augmentpackage_id"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:get_augment(package_id)")),(0,l.kt)("p",null,"Returns an ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," if the player doesn't have an augment with that ",(0,l.kt)("inlineCode",{parentName:"p"},"package_id"),"."),(0,l.kt)("h3",{id:"playeraugments"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:augments()")),(0,l.kt)("p",null,"Returns a list of ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augments")),(0,l.kt)("h3",{id:"playerboost_augmentpackage_id-level_increment"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:boost_augment(package_id, level_increment)")),(0,l.kt)("p",null,"If the level before boosting is 0, the ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment")," is initialized."),(0,l.kt)("p",null,"If the level after boosting is 0, the Augment's delete callback is called and the Augment is removed."),(0,l.kt)("h3",{id:"playerboost_max_healthhealth"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:boost_max_health(health)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"health"),": integer")),(0,l.kt)("p",null,"Adds the ",(0,l.kt)("inlineCode",{parentName:"p"},"health")," value to the max health."),(0,l.kt)("p",null,"If it is the player's health is greater than the new max health it will be reduced to the new max health."),(0,l.kt)("h3",{id:"playerhand_size"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:hand_size()")),(0,l.kt)("p",null,"Returns the max amount of cards the player can view from the deck accounting for boosts."),(0,l.kt)("h3",{id:"playerboost_hand_sizesize"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:boost_hand_size(size)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"size"),": integer")),(0,l.kt)("p",null,"Adds the ",(0,l.kt)("inlineCode",{parentName:"p"},"size")," value to the ",(0,l.kt)("inlineCode",{parentName:"p"},"hand_size")," or the amount of cards the player can view from the deck."),(0,l.kt)("h3",{id:"playerattack_level"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:attack_level()")),(0,l.kt)("p",null,"Returns the player's total attack level, a combination of ",(0,l.kt)("inlineCode",{parentName:"p"},"boost_attack_level")," and ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment")," boosts."),(0,l.kt)("h3",{id:"playerboost_attack_levelincrement"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:boost_attack_level(increment)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"increment"),": integer")),(0,l.kt)("p",null,"Adds the ",(0,l.kt)("inlineCode",{parentName:"p"},"increment")," value to the attack level. The attack level can only be boosted by five through this method."),(0,l.kt)("h3",{id:"playerrapid_level"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:rapid_level()")),(0,l.kt)("p",null,"Returns the player's total rapid level, a combination ",(0,l.kt)("inlineCode",{parentName:"p"},"boost_rapid_level")," and ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment")," boosts."),(0,l.kt)("h3",{id:"playerboost_rapid_levelincrement"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:boost_rapid_level(increment)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"increment"),": integer")),(0,l.kt)("p",null,"Adds the ",(0,l.kt)("inlineCode",{parentName:"p"},"increment")," value to the rapid level. The rapid level can only be boosted by five through this method."),(0,l.kt)("h3",{id:"playercharge_level"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:charge_level()")),(0,l.kt)("p",null,"Returns the player's total charge level, a combination ",(0,l.kt)("inlineCode",{parentName:"p"},"boost_charge_level")," and ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment")," boosts."),(0,l.kt)("h3",{id:"playerboost_charge_levelincrement"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:boost_charge_level(increment)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"increment"),": integer")),(0,l.kt)("p",null,"Adds the ",(0,l.kt)("inlineCode",{parentName:"p"},"increment")," value to the charge level. The charge level can only be boosted by five through this method."),(0,l.kt)("h3",{id:"playercalculate_default_charge_time"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:calculate_default_charge_time()")),(0,l.kt)("p",null,"Returns the amount of time in game frames, the ",(0,l.kt)("inlineCode",{parentName:"p"},"Shoot")," button would need to be held for a fully charged attack if the ",(0,l.kt)("a",{parentName:"p",href:"#playercalculate_charge_time"},"player.calculate_charge_time")," function was not set."),(0,l.kt)("h3",{id:"playercalculate_charge_time"},(0,l.kt)("inlineCode",{parentName:"h3"},"player:calculate_charge_time()")),(0,l.kt)("p",null,"Returns the amount of time in game frames, the ",(0,l.kt)("inlineCode",{parentName:"p"},"Shoot")," button should be held for a fully charged attack."),(0,l.kt)("h3",{id:"playercalculate_charge_time_func--functionself-number"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.calculate_charge_time_func = function(self): number")),(0,l.kt)("p",null,"Should return the amount of time in game frames, the ",(0,l.kt)("inlineCode",{parentName:"p"},"Shoot")," button should be held for a fully charged attack."),(0,l.kt)("h3",{id:"playernormal_attack_func--functionself-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.normal_attack_func = function(self): Action|nil")),(0,l.kt)("p",null,"Should return an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")),(0,l.kt)("p",null,"Many player mods use ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action#buster"},"Buster")," for their return value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.normal_attack_func = function(self)\n  return Buster.new(self, false, player:attack_level())\nend\n")),(0,l.kt)("h3",{id:"playercharged_attack_func--functionself-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.charged_attack_func = function(self): Action|nil")),(0,l.kt)("p",null,"Should return an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")),(0,l.kt)("p",null,"Many player mods use ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action#buster"},"Buster")," for their return value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"player.charged_attack_func = function(self)\n  return Buster.new(self, true, player:attack_level() * 10)\nend\n")),(0,l.kt)("h3",{id:"playerspecial_attack_func--functionself-action"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.special_attack_func = function(self): Action")),(0,l.kt)("p",null,"Should return an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")),(0,l.kt)("h3",{id:"playercan_charge_card_func--functioncard_properties-boolean"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.can_charge_card_func = function(card_properties): boolean")),(0,l.kt)("p",null,"Will not be called if there's no matching ",(0,l.kt)("inlineCode",{parentName:"p"},"charged_card_func")),(0,l.kt)("p",null,"Return true if ",(0,l.kt)("inlineCode",{parentName:"p"},"charged_card_func")," should be called to handle this card."),(0,l.kt)("h3",{id:"playercharged_card_func--functionself-card_properties-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.charged_card_func = function(self, card_properties): Action|nil")),(0,l.kt)("p",null,"Will not be called if there's no matching ",(0,l.kt)("inlineCode",{parentName:"p"},"can_charge_card_func")),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," is expected as a return value."),(0,l.kt)("h3",{id:"playermovement_func--functionself-direction"},(0,l.kt)("inlineCode",{parentName:"h3"},"player.movement_func = function(self, direction)")),(0,l.kt)("p",null,"Used to handle movement input, setting this overrides the default handling."),(0,l.kt)("h2",{id:"playerform"},"PlayerForm"),(0,l.kt)("p",null,"Created through ",(0,l.kt)("a",{parentName:"p",href:"#playercreate_form"},"player:create_form()")),(0,l.kt)("h3",{id:"player_formindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form:index()")),(0,l.kt)("p",null,"Returns a number. Used internally to identify the form."),(0,l.kt)("h3",{id:"player_formset_mugshot_texturepath"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form:set_mugshot_texture(path)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"path"),": file path relative to script file, use values returned from ",(0,l.kt)("inlineCode",{parentName:"li"},"Resources.load_texture()")," for better performance.")),(0,l.kt)("p",null,"This texture is used for the form selection menu."),(0,l.kt)("h3",{id:"player_formset_descriptiondescription"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form:set_description(description?)")),(0,l.kt)("p",null,"Sets the description to display when the player requests for info."),(0,l.kt)("h3",{id:"player_formset_fixed_cardcard_properties"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form:set_fixed_card(card_properties)")),(0,l.kt)("p",null,"Dedicates the last card slot in Card Select to the specified card. Internally defined as a ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton"),".\nOverrides the card button created on the Player and any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"."),(0,l.kt)("h3",{id:"player_formcreate_card_buttonslot_count"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form:create_card_button(slot_count)")),(0,l.kt)("p",null,"Creates a button embedded in the end of the card list in Card Select.\nOverrides the card button created on the Player and any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"."),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton")),(0,l.kt)("h3",{id:"player_formcreate_special_button"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form:create_special_button()")),(0,l.kt)("p",null,'Creates a button under the "Confirm" button in Card Select.\nOverrides the special button created on the Player and any ',(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"."),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton")),(0,l.kt)("h3",{id:"player_formon_activate_func--functionself-player"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.on_activate_func = function(self, player)")),(0,l.kt)("p",null,"Called when the form is activated, the player's appearance should be modified here."),(0,l.kt)("h3",{id:"player_formon_deactivate_func--functionself-player"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.on_deactivate_func = function(self, player)")),(0,l.kt)("p",null,"Called when the form is deactivated, the player's appearance should be reverted here."),(0,l.kt)("h3",{id:"player_formon_update_func--functionself-player"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.on_update_func = function(self, player)")),(0,l.kt)("p",null,"Called after ",(0,l.kt)("a",{parentName:"p",href:"#playernormal_attack_func--functionself"},"player.on_update_func")," when this form is active."),(0,l.kt)("h3",{id:"player_formcalculate_charge_time_func--functionself-player-number"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.calculate_charge_time_func = function(self, player): number")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playercalculate_charge_time_func--functionself-number"},"player.calculate_charge_time_func")," when this form is active.\nAlso overrides any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"'s override."),(0,l.kt)("p",null,"A number representing the minimum Shoot button held time in game frames is expected as a return value."),(0,l.kt)("h3",{id:"player_formnormal_attack_func--functionself-player-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.normal_attack_func = function(self, player): Action|nil")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playernormal_attack_func--functionself-actionnil"},"player.normal_attack_func")," when this form is active.\nAlso overrides any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"'s override."),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," is expected as a return value."),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," to fallback to the player's implementation."),(0,l.kt)("h3",{id:"player_formcharged_attack_func--functionself-player-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.charged_attack_func = function(self, player): Action|nil")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playercharged_attack_func--functionself-actionnil"},"player.charged_attack_func")," when this form is active.\nAlso overrides any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"'s override."),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," is expected as a return value."),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," to fallback to the player's implementation."),(0,l.kt)("h3",{id:"player_formspecial_attack_func--functionself-player-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.special_attack_func = function(self, player): Action|nil")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playerspecial_attack_func--functionself-action"},"player.special_attack_func")," when this form is active.\nAlso overrides any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"'s override."),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," is expected as a return value."),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," to fallback to the player's implementation."),(0,l.kt)("h3",{id:"player_formcan_charge_card_func--functioncard_properties-boolean"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.can_charge_card_func = function(card_properties): boolean")),(0,l.kt)("p",null,"Will not be called if there's no matching ",(0,l.kt)("inlineCode",{parentName:"p"},"charged_card_func")),(0,l.kt)("p",null,"Return true if this form's ",(0,l.kt)("inlineCode",{parentName:"p"},"charged_card_func")," should be called to handle this card."),(0,l.kt)("h3",{id:"player_formcharged_card_func--functionself-card_properties-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.charged_card_func = function(self, card_properties): Action|nil")),(0,l.kt)("p",null,"Will not be called if there's no matching ",(0,l.kt)("inlineCode",{parentName:"p"},"can_charge_card_func")),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," is expected as a return value."),(0,l.kt)("h3",{id:"player_formmovement_func--functionself-player"},(0,l.kt)("inlineCode",{parentName:"h3"},"player_form.movement_func = function(self, player)")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playermovement_func--functionself-direction"},"player.movement_func")," when this form is active.\nAlso overrides any ",(0,l.kt)("a",{parentName:"p",href:"#augment"},"Augment"),"'s override."),(0,l.kt)("p",null,"Used to handle movement input."),(0,l.kt)("h2",{id:"augment"},"Augment"),(0,l.kt)("h3",{id:"augmentid"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:id()")),(0,l.kt)("p",null,"Returns the package id of the augment."),(0,l.kt)("h3",{id:"augmentlevel"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:level()")),(0,l.kt)("p",null,"Returns an integer."),(0,l.kt)("h3",{id:"augmentowner"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:owner()")),(0,l.kt)("p",null,"Returns an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity"},"Entity")),(0,l.kt)("h3",{id:"augmenthas_tagtag"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:has_tag(tag)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tag"),": string")),(0,l.kt)("p",null,"Returns true if the augment has a matching tag."),(0,l.kt)("h3",{id:"augmentset_fixed_cardcard_properties"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:set_fixed_card(card_properties)")),(0,l.kt)("p",null,"Dedicates the last card slot in Card Select to the specified card. Internally defined as a ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton"),".\nOverrides the card button created on the Player."),(0,l.kt)("h3",{id:"augmentcreate_card_buttonslot_count"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:create_card_button(slot_count)")),(0,l.kt)("p",null,"Creates a button embedded in the end of the card list in Card Select.\nOverrides the card button created on the Player."),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton")),(0,l.kt)("h3",{id:"augmentcreate_special_button"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment:create_special_button()")),(0,l.kt)("p",null,'Creates a button under the "Confirm" button in Card Select.\nOverrides the special button created on the Player.'),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"#cardselectbutton"},"CardSelectButton")),(0,l.kt)("h3",{id:"augmentcalculate_charge_time_func--functionself-number"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.calculate_charge_time_func = function(self): number")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playercalculate_charge_time_func--functionself-number"},"player.calculate_charge_time_func")),(0,l.kt)("p",null,"A number representing the minimum Shoot button held time in game frames is expected as a return value."),(0,l.kt)("h3",{id:"augmentnormal_attack_func--functionself-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.normal_attack_func = function(self): Action|nil")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playernormal_attack_func--functionself-actionnil"},"player.normal_attack_func")),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," is expected as a return value."),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," to fallback to the next implementation (augment, form, or player)."),(0,l.kt)("h3",{id:"augmentcharged_attack_func--functionself-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.charged_attack_func = function(self): Action|nil")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playercharged_attack_func--functionself-actionnil"},"player.charged_attack_func")),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," is expected as a return value."),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," to fallback to the next implementation (augment, form, or player)."),(0,l.kt)("h3",{id:"augmentspecial_attack_func--functionself-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.special_attack_func = function(self): Action|nil")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playerspecial_attack_func--functionself-action"},"player.special_attack_func")),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," is expected as a return value."),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," to fallback to the next implementation (augment, form, or player)."),(0,l.kt)("h3",{id:"augmentcan_charge_card_func--functioncard_properties-boolean"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.can_charge_card_func = function(card_properties): boolean")),(0,l.kt)("p",null,"Will not be called if there's no matching ",(0,l.kt)("inlineCode",{parentName:"p"},"charged_card_func")),(0,l.kt)("p",null,"Return true if this augment's ",(0,l.kt)("inlineCode",{parentName:"p"},"charged_card_func")," should be called to handle this card."),(0,l.kt)("h3",{id:"augmentcharged_card_func--functionself-card_properties-actionnil"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.charged_card_func = function(self, card_properties): Action|nil")),(0,l.kt)("p",null,"Will not be called if there's no matching ",(0,l.kt)("inlineCode",{parentName:"p"},"can_charge_card_func")),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/action"},"Action")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," is expected as a return value."),(0,l.kt)("h3",{id:"augmentmovement_func--functionself-direction"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.movement_func = function(self, direction)")),(0,l.kt)("p",null,"Overrides ",(0,l.kt)("a",{parentName:"p",href:"#playermovement_func--functionself-direction"},"player.movement_func"),"."),(0,l.kt)("p",null,"Used to handle movement input."),(0,l.kt)("h3",{id:"augmenton_delete_func--functionself"},(0,l.kt)("inlineCode",{parentName:"h3"},"augment.on_delete_func = function(self)")),(0,l.kt)("p",null,"Called when the player is deleted or when this augment's level is boosted to <= 0."),(0,l.kt)("h2",{id:"cardselectbutton"},"CardSelectButton"),(0,l.kt)("h3",{id:"buttonsprite"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:sprite()")),(0,l.kt)("p",null,"Returns a ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/sprite"},"Sprite")),(0,l.kt)("h3",{id:"buttontexture"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:texture()")),(0,l.kt)("p",null,"Returns a string."),(0,l.kt)("p",null,"Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"button:sprite():texture()")),(0,l.kt)("h3",{id:"buttonset_texturepath"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:set_texture(path)")),(0,l.kt)("p",null,"Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"button:sprite():set_texture(path)")),(0,l.kt)("p",null,"Use values returned from ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/resources#resourcesload_texturepath"},"Resources.load_texture()")," for better performance."),(0,l.kt)("h3",{id:"buttonanimation"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:animation()")),(0,l.kt)("p",null,"Returns an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/animation"},"Animation")),(0,l.kt)("h3",{id:"buttonpreview_sprite"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:preview_sprite()")),(0,l.kt)("p",null,"Returns a ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/sprite"},"Sprite")),(0,l.kt)("h3",{id:"buttonpreview_texture"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:preview_texture()")),(0,l.kt)("p",null,"Returns a string."),(0,l.kt)("p",null,"Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"button:preview_sprite():texture()")),(0,l.kt)("h3",{id:"buttonset_preview_texturepath"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:set_preview_texture(path)")),(0,l.kt)("p",null,"Use values returned from ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/resources#resourcesload_texturepath"},"Resources.load_texture()")," for better performance."),(0,l.kt)("p",null,"Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"button:preview_sprite():set_texture(path)")),(0,l.kt)("h3",{id:"buttonpreview_animation"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:preview_animation()")),(0,l.kt)("p",null,"Returns an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/resource-api/animation"},"Animation")),(0,l.kt)("h3",{id:"buttonuse_card_previewcard_properties"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:use_card_preview(card_properties)")),(0,l.kt)("p",null,"Replaces the set preview sprite and animation with a preview generated by the ",(0,l.kt)("inlineCode",{parentName:"p"},"card_properties")," parameter."),(0,l.kt)("h3",{id:"buttonuse_fixed_card_cursorbool"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:use_fixed_card_cursor(bool)")),(0,l.kt)("p",null,"Changes the cursor (when hovered) from a dynamic cursor based on button width to a fixed card cursor locked to the last card slot."),(0,l.kt)("h3",{id:"buttonuse_default_audiobool"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:use_default_audio(bool)")),(0,l.kt)("p",null,"A method to disable successful button use audio."),(0,l.kt)("h3",{id:"buttonset_descriptiondescription"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:set_description(description?)")),(0,l.kt)("p",null,"Sets the description to display when the player requests for info."),(0,l.kt)("h3",{id:"buttonuse_card_descriptioncard_properties"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:use_card_description(card_properties)")),(0,l.kt)("p",null,"Sets the button's description to match a specified card."),(0,l.kt)("h3",{id:"buttonowner"},(0,l.kt)("inlineCode",{parentName:"h3"},"button:owner()")),(0,l.kt)("p",null,"Returns an ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/entity-api/entity"},"Entity")),(0,l.kt)("h3",{id:"buttonon_selection_change_func--functionself"},(0,l.kt)("inlineCode",{parentName:"h3"},"button.on_selection_change_func = function(self)")),(0,l.kt)("p",null,"Called when any changes are made to ",(0,l.kt)("a",{parentName:"p",href:"#playerstaged_items"},"player:staged_items()")),(0,l.kt)("h3",{id:"buttonuse_func--functionself-boolean"},(0,l.kt)("inlineCode",{parentName:"h3"},"button.use_func = function(self): boolean")),(0,l.kt)("p",null,"Return true if the button's usage effect was successful. The result will affect the played sound."),(0,l.kt)("h2",{id:"stageditem"},"StagedItem"),(0,l.kt)("p",null,"An item displayed as a pending selection in Card Select."),(0,l.kt)("h3",{id:"staged_itemcategory"},(0,l.kt)("inlineCode",{parentName:"h3"},"staged_item.category")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"deck_card"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"deck_discard"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"card"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"form"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"icon"'))),(0,l.kt)("h3",{id:"staged_itemindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"staged_item.index")),(0,l.kt)("p",null,"A number for ",(0,l.kt)("inlineCode",{parentName:"p"},'"deck_card"'),", ",(0,l.kt)("inlineCode",{parentName:"p"},'"deck_discard"'),", and ",(0,l.kt)("inlineCode",{parentName:"p"},'"form"')),(0,l.kt)("p",null,"Otherwise ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")),(0,l.kt)("h3",{id:"staged_itemcard_properties"},(0,l.kt)("inlineCode",{parentName:"h3"},"staged_item.card_properties")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/attack-api/cards#cardproperties"},"CardProperties")," for ",(0,l.kt)("inlineCode",{parentName:"p"},'"card"')),(0,l.kt)("p",null,"Otherwise: ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")))}s.isMDXComponent=!0}}]);