"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[799],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>b});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),u=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(a),m=l,b=c["".concat(p,".").concat(m)]||c[m]||s[m]||i;return a?n.createElement(b,r(r({ref:t},d),{},{components:a})):n.createElement(b,r({ref:t},d))}));function b(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5461:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=a(7462),l=(a(7294),a(3905));const i={},r="Battle",o={unversionedId:"client/lua-api/battle",id:"client/lua-api/battle",title:"Battle",description:"battle:createspawner(packageid, rank)",source:"@site/docs/01-client/02-lua-api/02-battle.md",sourceDirName:"01-client/02-lua-api",slug:"/client/lua-api/battle",permalink:"/documentation-website/docs/client/lua-api/battle",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Engine",permalink:"/documentation-website/docs/client/lua-api/engine"},next:{title:"Field",permalink:"/documentation-website/docs/client/lua-api/field"}},p={},u=[{value:"<code>battle:create_spawner(package_id, rank)</code>",id:"battlecreate_spawnerpackage_id-rank",level:3},{value:"<code>battle:spawn_player(player_index, col, row)</code>",id:"battlespawn_playerplayer_index-col-row",level:3},{value:"<code>battle:set_background(texture_path, animation_path, vel_x?, vel_y?)</code>",id:"battleset_backgroundtexture_path-animation_path-vel_x-vel_y",level:3},{value:"<code>battle:set_panels(texture_paths, animation_path, tile_width, tile_height)</code>",id:"battleset_panelstexture_paths-animation_path-tile_width-tile_height",level:3},{value:"<code>battle:get_field()</code>",id:"battleget_field",level:3},{value:"<code>battle:enable_automatic_turn_end(enabled?)</code>",id:"battleenable_automatic_turn_endenabled",level:3},{value:"<code>battle:set_turn_limit(limit)</code>",id:"battleset_turn_limitlimit",level:3},{value:"<code>battle:enable_flipping(enable?, player_index?)</code>",id:"battleenable_flippingenable-player_index",level:3},{value:"<code>battle:enable_boss_battle(enabled?)</code>",id:"battleenable_boss_battleenabled",level:3},{value:"Spawner",id:"spawner",level:2},{value:"<code>spawner:spawn(col, row)</code>",id:"spawnerspawncol-row",level:3},{value:"Mutator",id:"mutator",level:2},{value:"<code>mutator:mutate(function(entity))</code>",id:"mutatormutatefunctionentity",level:3}],d={toc:u},c="wrapper";function s(e){let{components:t,...a}=e;return(0,l.kt)(c,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"battle"},"Battle"),(0,l.kt)("h3",{id:"battlecreate_spawnerpackage_id-rank"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:create_spawner(package_id, rank)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"package_id"),": string, the package id for a character package"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rank"),": ",(0,l.kt)("a",{parentName:"li",href:"/docs/client/lua-api/character#battlecharacterfrom_packagepackage_id-team-rank"},"Rank"))),(0,l.kt)("p",null,"Returns a ",(0,l.kt)("a",{parentName:"p",href:"#spawner"},"Spawner")),(0,l.kt)("h3",{id:"battlespawn_playerplayer_index-col-row"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:spawn_player(player_index, col, row)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"player_index"),": number, starts at 0")),(0,l.kt)("p",null,"Sets the spawn position for this player."),(0,l.kt)("h3",{id:"battleset_backgroundtexture_path-animation_path-vel_x-vel_y"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:set_background(texture_path, animation_path, vel_x?, vel_y?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vel_x"),': if unset, uses the "VELOCITY" point on the first frame of the animation.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vel_y"),': if unset, uses the "VELOCITY" point on the first frame of the animation.')),(0,l.kt)("h3",{id:"battleset_panelstexture_paths-animation_path-tile_width-tile_height"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:set_panels(texture_paths, animation_path, tile_width, tile_height)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"texture_paths"),": a list of path strings, expects a path for ",(0,l.kt)("inlineCode",{parentName:"li"},"Team.Red"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Team.Blue"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"Team.Other")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"animation_path"),": an animation file used by tiles, applies to all team textures."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tile_width"),": width used to resolve spacing."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tile_height"),": height used to resolve spacing.")),(0,l.kt)("p",null,"Experimental. Replacement / removal is under consideration."),(0,l.kt)("h3",{id:"battleget_field"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:get_field()")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"/docs/client/lua-api/field"},"Field")),(0,l.kt)("h3",{id:"battleenable_automatic_turn_endenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:enable_automatic_turn_end(enabled?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enabled"),": defaults to true.")),(0,l.kt)("p",null,"Causes turns to end without needing the player to press the EndTurn button."),(0,l.kt)("h3",{id:"battleset_turn_limitlimit"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:set_turn_limit(limit)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"limit"),": max number of turns players can take.")),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"limit")," is hit, the battle will end as a failure."),(0,l.kt)("h3",{id:"battleenable_flippingenable-player_index"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:enable_flipping(enable?, player_index?)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"enable"),": defaults to true."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"player_index"),": starts at 0, if unset applies to all players.")),(0,l.kt)("p",null,"When enabled, players can flip using the FaceLeft and FaceRight buttons."),(0,l.kt)("p",null,"If this function is never called, it is automatically decided by checking for non team panels on the end row behind the player."),(0,l.kt)("h3",{id:"battleenable_boss_battleenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"battle:enable_boss_battle(enabled?)")),(0,l.kt)("p",null,"Affects the score in ",(0,l.kt)("a",{parentName:"p",href:"/docs/server/lua-api/events#battle_results"},"battle_results"),"."),(0,l.kt)("h2",{id:"spawner"},"Spawner"),(0,l.kt)("h3",{id:"spawnerspawncol-row"},(0,l.kt)("inlineCode",{parentName:"h3"},"spawner:spawn(col, row)")),(0,l.kt)("p",null,"Spawns the character at this position."),(0,l.kt)("p",null,"Returns a ",(0,l.kt)("a",{parentName:"p",href:"#mutator"},"Mutator")),(0,l.kt)("h2",{id:"mutator"},"Mutator"),(0,l.kt)("h3",{id:"mutatormutatefunctionentity"},(0,l.kt)("inlineCode",{parentName:"h3"},"mutator:mutate(function(entity))")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"entity"),": ",(0,l.kt)("a",{parentName:"li",href:"/docs/client/lua-api/entity"},"Entity"))))}s.isMDXComponent=!0}}]);