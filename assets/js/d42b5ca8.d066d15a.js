"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8464],{133:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>_,contentTitle:()=>n,default:()=>s,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=a(4848),l=a(8453);const r={},n="Player Data",d={id:"server/lua-api/player-data",title:"Player Data",description:"Functions relevant to items, money, stats, and tracking data.",source:"@site/docs/02-server/04-lua-api/08-player-data.md",sourceDirName:"02-server/04-lua-api",slug:"/server/lua-api/player-data",permalink:"/server/lua-api/player-data",draft:!1,unlisted:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/02-server/04-lua-api/08-player-data.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"serverSidebar",previous:{title:"Players",permalink:"/server/lua-api/players"},next:{title:"Bots",permalink:"/server/lua-api/bots"}},_={},c=[{value:"<code>Net.get_player_secret(player_id)</code>",id:"netget_player_secretplayer_id",level:3},{value:"<code>Net.get_player_element(player_id)</code>",id:"netget_player_elementplayer_id",level:3},{value:"<code>Net.get_player_health(player_id)</code>",id:"netget_player_healthplayer_id",level:3},{value:"<code>Net.set_player_health(player_id, health)</code>",id:"netset_player_healthplayer_id-health",level:3},{value:"<code>Net.get_player_base_health(player_id)</code>",id:"netget_player_base_healthplayer_id",level:3},{value:"<code>Net.set_player_base_health(player_id, health)</code>",id:"netset_player_base_healthplayer_id-health",level:3},{value:"<code>Net.get_player_max_health(player_id)</code>",id:"netget_player_max_healthplayer_id",level:3},{value:"<code>Net.get_player_emotion(player_id)</code>",id:"netget_player_emotionplayer_id",level:3},{value:"<code>Net.set_player_emotion(player_id, emotion)</code>",id:"netset_player_emotionplayer_id-emotion",level:3},{value:"<code>Net.get_player_money(player_id)</code>",id:"netget_player_moneyplayer_id",level:3},{value:"<code>Net.set_player_money(player_id, money)</code>",id:"netset_player_moneyplayer_id-money",level:3},{value:"<code>Net.register_item(item_id, item_definition)</code>",id:"netregister_itemitem_id-item_definition",level:3},{value:"<code>Net.get_item_name(item_id)</code>",id:"netget_item_nameitem_id",level:3},{value:"<code>Net.get_item_description(item_id)</code>",id:"netget_item_descriptionitem_id",level:3},{value:"<code>Net.get_player_items(player_id)</code>",id:"netget_player_itemsplayer_id",level:3},{value:"<code>Net.give_player_item(player_id, item_id, amount?)</code>",id:"netgive_player_itemplayer_id-item_id-amount",level:3},{value:"<code>Net.get_player_item_count(player_id, item_id)</code>",id:"netget_player_item_countplayer_id-item_id",level:3},{value:"<code>Net.player_has_item(player_id, item_id)</code>",id:"netplayer_has_itemplayer_id-item_id",level:3},{value:"<code>Net.get_player_card_count(player_id, package_id, code)</code>",id:"netget_player_card_countplayer_id-package_id-code",level:3},{value:"<code>Net.give_player_card(player_id, package_id, code, amount?)</code>",id:"netgive_player_cardplayer_id-package_id-code-amount",level:3},{value:"<code>Net.get_player_block_count(player_id, package_id, color)</code>",id:"netget_player_block_countplayer_id-package_id-color",level:3},{value:"<code>Net.give_player_block(player_id, package_id, color, amount?)</code>",id:"netgive_player_blockplayer_id-package_id-color-amount",level:3},{value:"<code>Net.player_character_enabled(player_id, package_id)</code>",id:"netplayer_character_enabledplayer_id-package_id",level:3},{value:"<code>Net.enable_player_character(player_id, package_id)</code>",id:"netenable_player_characterplayer_id-package_id",level:3},{value:"Net.ItemDefinition",id:"netitemdefinition",level:2}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"player-data",children:"Player Data"}),"\n",(0,i.jsx)(t.p,{children:"Functions relevant to items, money, stats, and tracking data."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_secretplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_secret(player_id)"})}),"\n",(0,i.jsxs)(t.p,{children:["Returns the secret identifier for this player, also known as ",(0,i.jsx)(t.code,{children:"identity"}),". Similar to a password, do not share."]}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_elementplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_element(player_id)"})}),"\n",(0,i.jsxs)(t.p,{children:["Returns ",(0,i.jsx)(t.code,{children:'"None" | "Fire" | "Aqua" | "Elec" | "Wood" | "Sword" | "Wind" | "Cursor" | "Summon" | "Plus" | "Break"'})]}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_healthplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_health(player_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the starting health for the next battle."}),"\n",(0,i.jsx)(t.h3,{id:"netset_player_healthplayer_id-health",children:(0,i.jsx)(t.code,{children:"Net.set_player_health(player_id, health)"})}),"\n",(0,i.jsx)(t.p,{children:"Sets the starting health for the next battle."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_base_healthplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_base_health(player_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the player's maximum health without augments."}),"\n",(0,i.jsx)(t.h3,{id:"netset_player_base_healthplayer_id-health",children:(0,i.jsx)(t.code,{children:"Net.set_player_base_health(player_id, health)"})}),"\n",(0,i.jsx)(t.p,{children:"Sets the player's maximum health without augments."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_max_healthplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_max_health(player_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the player's maximum health with augments."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_emotionplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_emotion(player_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the emotion that will be applied at the start of the next battle."}),"\n",(0,i.jsx)(t.h3,{id:"netset_player_emotionplayer_id-emotion",children:(0,i.jsx)(t.code,{children:"Net.set_player_emotion(player_id, emotion)"})}),"\n",(0,i.jsx)(t.p,{children:"Sets the emotion applied at the start of the next battle."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_moneyplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_money(player_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the amount of money the player has."}),"\n",(0,i.jsx)(t.h3,{id:"netset_player_moneyplayer_id-money",children:(0,i.jsx)(t.code,{children:"Net.set_player_money(player_id, money)"})}),"\n",(0,i.jsx)(t.p,{children:"Sets the amount of money the player has."}),"\n",(0,i.jsx)(t.h3,{id:"netregister_itemitem_id-item_definition",children:(0,i.jsx)(t.code,{children:"Net.register_item(item_id, item_definition)"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"item_definition"}),": ",(0,i.jsx)(t.a,{href:"#netitemdefinition",children:"Net.ItemDefinition"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Registers an item definition to be shared with the client when the player obtains this item for the first time."}),"\n",(0,i.jsx)(t.p,{children:"The item's name should be at most 8 characters for best display."}),"\n",(0,i.jsx)(t.h3,{id:"netget_item_nameitem_id",children:(0,i.jsx)(t.code,{children:"Net.get_item_name(item_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the name used in menus."}),"\n",(0,i.jsx)(t.h3,{id:"netget_item_descriptionitem_id",children:(0,i.jsx)(t.code,{children:"Net.get_item_description(item_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the description used in menus."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_itemsplayer_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_items(player_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a list of unique item ids."}),"\n",(0,i.jsx)(t.h3,{id:"netgive_player_itemplayer_id-item_id-amount",children:(0,i.jsx)(t.code,{children:"Net.give_player_item(player_id, item_id, amount?)"})}),"\n",(0,i.jsxs)(t.p,{children:["Gives the player items. ",(0,i.jsx)(t.code,{children:"count"})," will default to 1."]}),"\n",(0,i.jsx)(t.p,{children:"Accepts negative amount."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_item_countplayer_id-item_id",children:(0,i.jsx)(t.code,{children:"Net.get_player_item_count(player_id, item_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the amount of the item the player has."}),"\n",(0,i.jsx)(t.h3,{id:"netplayer_has_itemplayer_id-item_id",children:(0,i.jsx)(t.code,{children:"Net.player_has_item(player_id, item_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns true if the player has at least one of this item."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_card_countplayer_id-package_id-code",children:(0,i.jsx)(t.code,{children:"Net.get_player_card_count(player_id, package_id, code)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the amount of matching cards the player owns."}),"\n",(0,i.jsx)(t.h3,{id:"netgive_player_cardplayer_id-package_id-code-amount",children:(0,i.jsx)(t.code,{children:"Net.give_player_card(player_id, package_id, code, amount?)"})}),"\n",(0,i.jsx)(t.p,{children:"Adds cards to the player's pack."}),"\n",(0,i.jsx)(t.p,{children:"Adding any card restricts usable cards to only given cards."}),"\n",(0,i.jsx)(t.p,{children:"Accepts negative amount."}),"\n",(0,i.jsx)(t.h3,{id:"netget_player_block_countplayer_id-package_id-color",children:(0,i.jsx)(t.code,{children:"Net.get_player_block_count(player_id, package_id, color)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the amount of matching cards the player owns."}),"\n",(0,i.jsx)(t.h3,{id:"netgive_player_blockplayer_id-package_id-color-amount",children:(0,i.jsx)(t.code,{children:"Net.give_player_block(player_id, package_id, color, amount?)"})}),"\n",(0,i.jsx)(t.p,{children:"Adds blocks to the player's pack."}),"\n",(0,i.jsx)(t.p,{children:"Adding any block restricts usable blocks to only given blocks."}),"\n",(0,i.jsx)(t.p,{children:"Accepts negative amount."}),"\n",(0,i.jsx)(t.h3,{id:"netplayer_character_enabledplayer_id-package_id",children:(0,i.jsx)(t.code,{children:"Net.player_character_enabled(player_id, package_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Returns true if the player can use the playable character's abilities."}),"\n",(0,i.jsx)(t.h3,{id:"netenable_player_characterplayer_id-package_id",children:(0,i.jsx)(t.code,{children:"Net.enable_player_character(player_id, package_id)"})}),"\n",(0,i.jsx)(t.p,{children:"Allows the player to use the playable character's abilities."}),"\n",(0,i.jsx)(t.p,{children:"Enabling any playable character locks the player out of using abilities on non enabled playable characters."}),"\n",(0,i.jsx)(t.h2,{id:"netitemdefinition",children:"Net.ItemDefinition"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:"---@class Net.ItemDefinition\n---@field name string\n---@field description string\n---@field consumable boolean?\n"})})]})}function s(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>d});var i=a(6540);const l={},r=i.createContext(l);function n(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);