"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1889],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},_=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),f=s(n),_=l,d=f["".concat(c,".").concat(_)]||f[_]||p[_]||a;return n?i.createElement(d,o(o({ref:t},u),{},{components:n})):i.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=_;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r[f]="string"==typeof e?e:l,o[1]=r;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}_.displayName="MDXCreateElement"},8462:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var i=n(7462),l=(n(7294),n(3905));const a={},o="Custom Tile State",r={unversionedId:"client/lua-api/field-api/custom-tile-state",id:"client/lua-api/field-api/custom-tile-state",title:"Custom Tile State",description:"See Tile State Package Documentation for creating new tile states.",source:"@site/docs/01-client/02-lua-api/03-field-api/06-custom-tile-state.md",sourceDirName:"01-client/02-lua-api/03-field-api",slug:"/client/lua-api/field-api/custom-tile-state",permalink:"/client/lua-api/field-api/custom-tile-state",draft:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/01-client/02-lua-api/03-field-api/06-custom-tile-state.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"clientSidebar",previous:{title:"Encounter",permalink:"/client/lua-api/field-api/encounter"},next:{title:"Action",permalink:"/client/lua-api/attack-api/action"}},c={},s=[{value:"<code>custom_tile_state:field()</code>",id:"custom_tile_statefield",level:3},{value:"<code>custom_tile_state.change_request_func = function(self, tile, tile_state): boolean</code>",id:"custom_tile_statechange_request_func--functionself-tile-tile_state-boolean",level:3},{value:"<code>custom_tile_state.on_update_func = function(self, tile)</code>",id:"custom_tile_stateon_update_func--functionself-tile",level:3},{value:"<code>custom_tile_state.on_entity_enter_func = function(self, entity)</code>",id:"custom_tile_stateon_entity_enter_func--functionself-entity",level:3},{value:"<code>custom_tile_state.on_entity_leave_func = function(self, entity, prev_tile)</code>",id:"custom_tile_stateon_entity_leave_func--functionself-entity-prev_tile",level:3},{value:"<code>custom_tile_state.on_entity_stop_func = function(self, entity, prev_tile)</code>",id:"custom_tile_stateon_entity_stop_func--functionself-entity-prev_tile",level:3}],u={toc:s},f="wrapper";function p(e){let{components:t,...n}=e;return(0,l.kt)(f,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"custom-tile-state"},"Custom Tile State"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/client/packages#tile-states"},"Tile State Package Documentation")," for creating new tile states."),(0,l.kt)("h3",{id:"custom_tile_statefield"},(0,l.kt)("inlineCode",{parentName:"h3"},"custom_tile_state:field()")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/field"},"Field")),(0,l.kt)("h3",{id:"custom_tile_statechange_request_func--functionself-tile-tile_state-boolean"},(0,l.kt)("inlineCode",{parentName:"h3"},"custom_tile_state.change_request_func = function(self, tile, tile_state): boolean")),(0,l.kt)("p",null,"Called when ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/tile#tileset_statetile_state"},"tile:set_state()")," is called. Used to accept or deny the change."),(0,l.kt)("h3",{id:"custom_tile_stateon_update_func--functionself-tile"},(0,l.kt)("inlineCode",{parentName:"h3"},"custom_tile_state.on_update_func = function(self, tile)")),(0,l.kt)("p",null,"Called for every tile matching the state while time isn't frozen."),(0,l.kt)("h3",{id:"custom_tile_stateon_entity_enter_func--functionself-entity"},(0,l.kt)("inlineCode",{parentName:"h3"},"custom_tile_state.on_entity_enter_func = function(self, entity)")),(0,l.kt)("p",null,"Called when an entity enters the tile during a movement, ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/tile#tileadd_entityentity"},"tile:add_entity()"),", ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/tile#tileset_statetile_state"},"tile:set_state()"),", or spawning."),(0,l.kt)("h3",{id:"custom_tile_stateon_entity_leave_func--functionself-entity-prev_tile"},(0,l.kt)("inlineCode",{parentName:"h3"},"custom_tile_state.on_entity_leave_func = function(self, entity, prev_tile)")),(0,l.kt)("p",null,"Called when an entity moves to another tile from a movement or ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/tile#tileadd_entityentity"},"tile:add_entity()"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"tile")," is the tile the entity left."),(0,l.kt)("h3",{id:"custom_tile_stateon_entity_stop_func--functionself-entity-prev_tile"},(0,l.kt)("inlineCode",{parentName:"h3"},"custom_tile_state.on_entity_stop_func = function(self, entity, prev_tile)")),(0,l.kt)("p",null,"Called when an entity finishes movement on the tile or is added by ",(0,l.kt)("a",{parentName:"p",href:"/client/lua-api/field-api/tile#tileadd_entityentity"},"tile:add_entity()"),"."))}p.isMDXComponent=!0}}]);