"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8039],{9510:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=s(4848),n=s(8453);const a={},i="Assets",o={id:"server/lua-api/assets",title:"Assets",description:"Net.updateasset(serverpath, content)",source:"@site/docs/02-server/04-lua-api/11-assets.md",sourceDirName:"02-server/04-lua-api",slug:"/server/lua-api/assets",permalink:"/server/lua-api/assets",draft:!1,unlisted:!1,editUrl:"https://github.com/Hub-OS/documentation-website/tree/master/docs/02-server/04-lua-api/11-assets.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"serverSidebar",previous:{title:"Actor Property Animations",permalink:"/server/lua-api/actor-property-animations"},next:{title:"Synchronization",permalink:"/server/lua-api/synchronization"}},d={},c=[{value:"<code>Net.update_asset(server_path, content)</code>",id:"netupdate_assetserver_path-content",level:3},{value:"<code>Net.remove_asset(server_path)</code>",id:"netremove_assetserver_path",level:3},{value:"<code>Net.has_asset(server_path)</code>",id:"nethas_assetserver_path",level:3},{value:"<code>Net.get_asset_type(server_path)</code>",id:"netget_asset_typeserver_path",level:3},{value:"<code>Net.get_asset_size(server_path)</code>",id:"netget_asset_sizeserver_path",level:3}];function h(e){const t={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"assets",children:"Assets"}),"\n",(0,r.jsx)(t.h3,{id:"netupdate_assetserver_path-content",children:(0,r.jsx)(t.code,{children:"Net.update_asset(server_path, content)"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"content"}),": ",(0,r.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Modifies the asset in memory and updates any clients that have downloaded the previous version of this asset."}),"\n",(0,r.jsx)(t.h3,{id:"netremove_assetserver_path",children:(0,r.jsx)(t.code,{children:"Net.remove_asset(server_path)"})}),"\n",(0,r.jsx)(t.p,{children:"Unloads the asset from the server, preventing the asset from being shared to clients."}),"\n",(0,r.jsx)(t.h3,{id:"nethas_assetserver_path",children:(0,r.jsx)(t.code,{children:"Net.has_asset(server_path)"})}),"\n",(0,r.jsx)(t.p,{children:"Returns true if the asset exists."}),"\n",(0,r.jsx)(t.h3,{id:"netget_asset_typeserver_path",children:(0,r.jsx)(t.code,{children:"Net.get_asset_type(server_path)"})}),"\n",(0,r.jsxs)(t.p,{children:["Returns ",(0,r.jsx)(t.code,{children:'"text" | "texture" | "audio" | "data"'})]}),"\n",(0,r.jsx)(t.h3,{id:"netget_asset_sizeserver_path",children:(0,r.jsx)(t.code,{children:"Net.get_asset_size(server_path)"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the asset's size in bytes."}),"\n",(0,r.jsx)(t.p,{children:"Note some assets are compressed when loaded by the server and may differ from the size on disk."})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var r=s(6540);const n={},a=r.createContext(n);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);